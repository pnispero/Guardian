#=================================================================#
# Template file: guardian_device_data.template
# Database for device data values within sxrss for the guardian
# And for snapshot data values
# Uses guardian_device_data.substitutions
# Macro description:                                                   #
#   - NAME       : Name                                                #
#   - DESC       : Description                                         #
#   - ID         : ASYN ID                                             #
#=====================================================================


# ex: FBCK:FB02:GN01:S1DES_STORED
# This records purpose is to copy data from device data pvs, and push to ASYN PV
record(ao, "SIOC:SYS0:ML01:AO861_STORED") { 
    field(DESC, "FEL pulse energy in use by guardian")
    field(PINI, "YES")
    field(EGU, "uJ")
    field(PREC, "3")
    field(DTYP, "asynFloat64")
	field(OMSL, "closed_loop") 
    field(DOL, "SIOC:SYS0:ML01:AO861_TEST CPP")  # TODO: Temporarily set as test
    field(OUT, "@asyn(GUARDIAN, 0, 0)STORED") 
    # info(autosaveFields, "VAL PREC DESC EGU HOPR LOPR SEVR HIHI HIGH LOW LOLO HHSV HSV LSV LLSV")
}

# ex: FBCK:FB02:GN01:S1DES_STORED_RBV
record(ai, "SIOC:SYS0:ML01:AO861_STORED_RBV") {
    field(DESC, "FEL pulse energy in use by guardian")    
    field(EGU, "uJ")
    field(PREC, "3")
    field(DTYP, "asynFloat64")
    field(SCAN, "I/O Intr")
    field(INP, "@asyn(GUARDIAN, 0, 0)STORED")
    # info(autosaveFields, "VAL PREC DESC EGU HOPR LOPR SEVR HIHI HIGH LOW LOLO HHSV HSV LSV LLSV")
}

# ex: FBCK:FB02:GN01:S1DES_SNAPSHOT
record(ai, "SIOC:SYS0:ML01:AO861_SNAPSHOT") {
    field(DESC, "FEL pulse energy in use by guardian")
    field(SCAN, "I/O Intr")
    field(EGU, "uJ")
    field(PREC, "3")
    field(DTYP, "asynFloat64")
    field(INP, "@asyn(GUARDIAN, 0, 0)SNAPSHOT")
    # info(autosaveFields, "VAL PREC DESC EGU HOPR LOPR SEVR HIHI HIGH LOW LOLO HHSV HSV LSV LLSV")
}
#=================================================================#
# Template file: guardian_device_data.template
# Database for device data values within sxrss for the guardian
# And for snapshot data values
# Uses guardian_device_data.substitutions
# Macro description:                                                   #
#   - NAME       : Name                                                #
#   - DESC       : Description                                         #
#   - ID         : ASYN ID                                             #
#=====================================================================


# ex: FBCK:FB02:GN01:S1DES_STORED
# This records purpose is to copy data from device data pvs, and push to ASYN PV
record(ao, "FBCK:FB02:GN01:S1DES_STORED") { 
    field(DESC, "bunch charge feedback setpoint")
    field(PINI, "YES")
    field(EGU, "nC")
    field(PREC, "3")
    field(DTYP, "asynFloat64")
	field(OMSL, "closed_loop") 
    field(DOL, "FBCK:FB02:GN01:S1DES_TEST CPP")  # TODO: Temporarily set as test
    field(OUT, "@asyn(GUARDIAN, 1, 0)STORED") 
    # info(autosaveFields, "VAL PREC DESC EGU HOPR LOPR SEVR HIHI HIGH LOW LOLO HHSV HSV LSV LLSV")
}

# ex: FBCK:FB02:GN01:S1DES_STORED_RBV
record(ai, "FBCK:FB02:GN01:S1DES_STORED_RBV") {
    field(DESC, "bunch charge feedback setpoint")    
    field(EGU, "nC")
    field(PREC, "3")
    field(DTYP, "asynFloat64")
    field(SCAN, "I/O Intr")
    field(INP, "@asyn(GUARDIAN, 1, 0)STORED")
    # info(autosaveFields, "VAL PREC DESC EGU HOPR LOPR SEVR HIHI HIGH LOW LOLO HHSV HSV LSV LLSV")
}

# ex: FBCK:FB02:GN01:S1DES_SNAPSHOT
record(ai, "FBCK:FB02:GN01:S1DES_SNAPSHOT") {
    field(DESC, "bunch charge feedback setpoint")
    field(SCAN, "I/O Intr")
    field(EGU, "nC")
    field(PREC, "3")
    field(DTYP, "asynFloat64")
    field(INP, "@asyn(GUARDIAN, 1, 0)SNAPSHOT")
    # info(autosaveFields, "VAL PREC DESC EGU HOPR LOPR SEVR HIHI HIGH LOW LOLO HHSV HSV LSV LLSV")
}
#=================================================================#
# Template file: guardian_device_data.template
# Database for device data values within sxrss for the guardian
# And for snapshot data values
# Uses guardian_device_data.substitutions
# Macro description:                                                   #
#   - NAME       : Name                                                #
#   - DESC       : Description                                         #
#   - ID         : ASYN ID                                             #
#=====================================================================


# ex: FBCK:FB02:GN01:S1DES_STORED
# This records purpose is to copy data from device data pvs, and push to ASYN PV
record(ao, "FBCK:FB02:GN01:S1P1_STORED") { 
    field(DESC, "bunch charge feedback state")
    field(PINI, "YES")
    field(EGU, "nC")
    field(PREC, "3")
    field(DTYP, "asynFloat64")
	field(OMSL, "closed_loop") 
    field(DOL, "FBCK:FB02:GN01:S1P1_TEST CPP")  # TODO: Temporarily set as test
    field(OUT, "@asyn(GUARDIAN, 2, 0)STORED") 
    # info(autosaveFields, "VAL PREC DESC EGU HOPR LOPR SEVR HIHI HIGH LOW LOLO HHSV HSV LSV LLSV")
}

# ex: FBCK:FB02:GN01:S1DES_STORED_RBV
record(ai, "FBCK:FB02:GN01:S1P1_STORED_RBV") {
    field(DESC, "bunch charge feedback state")    
    field(EGU, "nC")
    field(PREC, "3")
    field(DTYP, "asynFloat64")
    field(SCAN, "I/O Intr")
    field(INP, "@asyn(GUARDIAN, 2, 0)STORED")
    # info(autosaveFields, "VAL PREC DESC EGU HOPR LOPR SEVR HIHI HIGH LOW LOLO HHSV HSV LSV LLSV")
}

# ex: FBCK:FB02:GN01:S1DES_SNAPSHOT
record(ai, "FBCK:FB02:GN01:S1P1_SNAPSHOT") {
    field(DESC, "bunch charge feedback state")
    field(SCAN, "I/O Intr")
    field(EGU, "nC")
    field(PREC, "3")
    field(DTYP, "asynFloat64")
    field(INP, "@asyn(GUARDIAN, 2, 0)SNAPSHOT")
    # info(autosaveFields, "VAL PREC DESC EGU HOPR LOPR SEVR HIHI HIGH LOW LOLO HHSV HSV LSV LLSV")
}
#=================================================================#
# Template file: guardian_device_data.template
# Database for device data values within sxrss for the guardian
# And for snapshot data values
# Uses guardian_device_data.substitutions
# Macro description:                                                   #
#   - NAME       : Name                                                #
#   - DESC       : Description                                         #
#   - ID         : ASYN ID                                             #
#=====================================================================


# ex: FBCK:FB02:GN01:S1DES_STORED
# This records purpose is to copy data from device data pvs, and push to ASYN PV
record(ao, "FBCK:BCI0:1:CHRGSP_STORED") { 
    field(DESC, "bunch charge matlab fbck setpt")
    field(PINI, "YES")
    field(EGU, "nC")
    field(PREC, "3")
    field(DTYP, "asynFloat64")
	field(OMSL, "closed_loop") 
    field(DOL, "FBCK:BCI0:1:CHRGSP_TEST CPP")  # TODO: Temporarily set as test
    field(OUT, "@asyn(GUARDIAN, 3, 0)STORED") 
    # info(autosaveFields, "VAL PREC DESC EGU HOPR LOPR SEVR HIHI HIGH LOW LOLO HHSV HSV LSV LLSV")
}

# ex: FBCK:FB02:GN01:S1DES_STORED_RBV
record(ai, "FBCK:BCI0:1:CHRGSP_STORED_RBV") {
    field(DESC, "bunch charge matlab fbck setpt")    
    field(EGU, "nC")
    field(PREC, "3")
    field(DTYP, "asynFloat64")
    field(SCAN, "I/O Intr")
    field(INP, "@asyn(GUARDIAN, 3, 0)STORED")
    # info(autosaveFields, "VAL PREC DESC EGU HOPR LOPR SEVR HIHI HIGH LOW LOLO HHSV HSV LSV LLSV")
}

# ex: FBCK:FB02:GN01:S1DES_SNAPSHOT
record(ai, "FBCK:BCI0:1:CHRGSP_SNAPSHOT") {
    field(DESC, "bunch charge matlab fbck setpt")
    field(SCAN, "I/O Intr")
    field(EGU, "nC")
    field(PREC, "3")
    field(DTYP, "asynFloat64")
    field(INP, "@asyn(GUARDIAN, 3, 0)SNAPSHOT")
    # info(autosaveFields, "VAL PREC DESC EGU HOPR LOPR SEVR HIHI HIGH LOW LOLO HHSV HSV LSV LLSV")
}
#=================================================================#
# Template file: guardian_device_data.template
# Database for device data values within sxrss for the guardian
# And for snapshot data values
# Uses guardian_device_data.substitutions
# Macro description:                                                   #
#   - NAME       : Name                                                #
#   - DESC       : Description                                         #
#   - ID         : ASYN ID                                             #
#=====================================================================


# ex: FBCK:FB02:GN01:S1DES_STORED
# This records purpose is to copy data from device data pvs, and push to ASYN PV
record(ao, "FBCK:BCI0:1:CHRG_S_STORED") { 
    field(DESC, "bunch charge matlab fbck state")
    field(PINI, "YES")
    field(EGU, "nC")
    field(PREC, "3")
    field(DTYP, "asynFloat64")
	field(OMSL, "closed_loop") 
    field(DOL, "FBCK:BCI0:1:CHRG_S_TEST CPP")  # TODO: Temporarily set as test
    field(OUT, "@asyn(GUARDIAN, 4, 0)STORED") 
    # info(autosaveFields, "VAL PREC DESC EGU HOPR LOPR SEVR HIHI HIGH LOW LOLO HHSV HSV LSV LLSV")
}

# ex: FBCK:FB02:GN01:S1DES_STORED_RBV
record(ai, "FBCK:BCI0:1:CHRG_S_STORED_RBV") {
    field(DESC, "bunch charge matlab fbck state")    
    field(EGU, "nC")
    field(PREC, "3")
    field(DTYP, "asynFloat64")
    field(SCAN, "I/O Intr")
    field(INP, "@asyn(GUARDIAN, 4, 0)STORED")
    # info(autosaveFields, "VAL PREC DESC EGU HOPR LOPR SEVR HIHI HIGH LOW LOLO HHSV HSV LSV LLSV")
}

# ex: FBCK:FB02:GN01:S1DES_SNAPSHOT
record(ai, "FBCK:BCI0:1:CHRG_S_SNAPSHOT") {
    field(DESC, "bunch charge matlab fbck state")
    field(SCAN, "I/O Intr")
    field(EGU, "nC")
    field(PREC, "3")
    field(DTYP, "asynFloat64")
    field(INP, "@asyn(GUARDIAN, 4, 0)SNAPSHOT")
    # info(autosaveFields, "VAL PREC DESC EGU HOPR LOPR SEVR HIHI HIGH LOW LOLO HHSV HSV LSV LLSV")
}
#=================================================================#
# Template file: guardian_device_data.template
# Database for device data values within sxrss for the guardian
# And for snapshot data values
# Uses guardian_device_data.substitutions
# Macro description:                                                   #
#   - NAME       : Name                                                #
#   - DESC       : Description                                         #
#   - ID         : ASYN ID                                             #
#=====================================================================


# ex: FBCK:FB02:GN01:S1DES_STORED
# This records purpose is to copy data from device data pvs, and push to ASYN PV
record(ao, "FBCK:FB04:LG01:S2DES_STORED") { 
    field(DESC, "BC1 energy setpoint")
    field(PINI, "YES")
    field(EGU, "MeV")
    field(PREC, "1")
    field(DTYP, "asynFloat64")
	field(OMSL, "closed_loop") 
    field(DOL, "FBCK:FB04:LG01:S2DES_TEST CPP")  # TODO: Temporarily set as test
    field(OUT, "@asyn(GUARDIAN, 5, 0)STORED") 
    # info(autosaveFields, "VAL PREC DESC EGU HOPR LOPR SEVR HIHI HIGH LOW LOLO HHSV HSV LSV LLSV")
}

# ex: FBCK:FB02:GN01:S1DES_STORED_RBV
record(ai, "FBCK:FB04:LG01:S2DES_STORED_RBV") {
    field(DESC, "BC1 energy setpoint")    
    field(EGU, "MeV")
    field(PREC, "1")
    field(DTYP, "asynFloat64")
    field(SCAN, "I/O Intr")
    field(INP, "@asyn(GUARDIAN, 5, 0)STORED")
    # info(autosaveFields, "VAL PREC DESC EGU HOPR LOPR SEVR HIHI HIGH LOW LOLO HHSV HSV LSV LLSV")
}

# ex: FBCK:FB02:GN01:S1DES_SNAPSHOT
record(ai, "FBCK:FB04:LG01:S2DES_SNAPSHOT") {
    field(DESC, "BC1 energy setpoint")
    field(SCAN, "I/O Intr")
    field(EGU, "MeV")
    field(PREC, "1")
    field(DTYP, "asynFloat64")
    field(INP, "@asyn(GUARDIAN, 5, 0)SNAPSHOT")
    # info(autosaveFields, "VAL PREC DESC EGU HOPR LOPR SEVR HIHI HIGH LOW LOLO HHSV HSV LSV LLSV")
}
#=================================================================#
# Template file: guardian_device_data.template
# Database for device data values within sxrss for the guardian
# And for snapshot data values
# Uses guardian_device_data.substitutions
# Macro description:                                                   #
#   - NAME       : Name                                                #
#   - DESC       : Description                                         #
#   - ID         : ASYN ID                                             #
#=====================================================================


# ex: FBCK:FB02:GN01:S1DES_STORED
# This records purpose is to copy data from device data pvs, and push to ASYN PV
record(ao, "FBCK:FB04:LG01:S2P2_S_STORED") { 
    field(DESC, "BC1 energy state for SXR")
    field(PINI, "YES")
    field(EGU, "MeV")
    field(PREC, "1")
    field(DTYP, "asynFloat64")
	field(OMSL, "closed_loop") 
    field(DOL, "FBCK:FB04:LG01:S2P2_S_TEST CPP")  # TODO: Temporarily set as test
    field(OUT, "@asyn(GUARDIAN, 6, 0)STORED") 
    # info(autosaveFields, "VAL PREC DESC EGU HOPR LOPR SEVR HIHI HIGH LOW LOLO HHSV HSV LSV LLSV")
}

# ex: FBCK:FB02:GN01:S1DES_STORED_RBV
record(ai, "FBCK:FB04:LG01:S2P2_S_STORED_RBV") {
    field(DESC, "BC1 energy state for SXR")    
    field(EGU, "MeV")
    field(PREC, "1")
    field(DTYP, "asynFloat64")
    field(SCAN, "I/O Intr")
    field(INP, "@asyn(GUARDIAN, 6, 0)STORED")
    # info(autosaveFields, "VAL PREC DESC EGU HOPR LOPR SEVR HIHI HIGH LOW LOLO HHSV HSV LSV LLSV")
}

# ex: FBCK:FB02:GN01:S1DES_SNAPSHOT
record(ai, "FBCK:FB04:LG01:S2P2_S_SNAPSHOT") {
    field(DESC, "BC1 energy state for SXR")
    field(SCAN, "I/O Intr")
    field(EGU, "MeV")
    field(PREC, "1")
    field(DTYP, "asynFloat64")
    field(INP, "@asyn(GUARDIAN, 6, 0)SNAPSHOT")
    # info(autosaveFields, "VAL PREC DESC EGU HOPR LOPR SEVR HIHI HIGH LOW LOLO HHSV HSV LSV LLSV")
}
#=================================================================#
# Template file: guardian_device_data.template
# Database for device data values within sxrss for the guardian
# And for snapshot data values
# Uses guardian_device_data.substitutions
# Macro description:                                                   #
#   - NAME       : Name                                                #
#   - DESC       : Description                                         #
#   - ID         : ASYN ID                                             #
#=====================================================================


# ex: FBCK:FB02:GN01:S1DES_STORED
# This records purpose is to copy data from device data pvs, and push to ASYN PV
record(ao, "FBCK:FB04:LG01:BC1VERNIER_SXR_STORED") { 
    field(DESC, "BC1 energy vernier for SXR")
    field(PINI, "YES")
    field(EGU, "MeV")
    field(PREC, "1")
    field(DTYP, "asynFloat64")
	field(OMSL, "closed_loop") 
    field(DOL, "FBCK:FB04:LG01:BC1VERNIER_SXR_TEST CPP")  # TODO: Temporarily set as test
    field(OUT, "@asyn(GUARDIAN, 7, 0)STORED") 
    # info(autosaveFields, "VAL PREC DESC EGU HOPR LOPR SEVR HIHI HIGH LOW LOLO HHSV HSV LSV LLSV")
}

# ex: FBCK:FB02:GN01:S1DES_STORED_RBV
record(ai, "FBCK:FB04:LG01:BC1VERNIER_SXR_STORED_RBV") {
    field(DESC, "BC1 energy vernier for SXR")    
    field(EGU, "MeV")
    field(PREC, "1")
    field(DTYP, "asynFloat64")
    field(SCAN, "I/O Intr")
    field(INP, "@asyn(GUARDIAN, 7, 0)STORED")
    # info(autosaveFields, "VAL PREC DESC EGU HOPR LOPR SEVR HIHI HIGH LOW LOLO HHSV HSV LSV LLSV")
}

# ex: FBCK:FB02:GN01:S1DES_SNAPSHOT
record(ai, "FBCK:FB04:LG01:BC1VERNIER_SXR_SNAPSHOT") {
    field(DESC, "BC1 energy vernier for SXR")
    field(SCAN, "I/O Intr")
    field(EGU, "MeV")
    field(PREC, "1")
    field(DTYP, "asynFloat64")
    field(INP, "@asyn(GUARDIAN, 7, 0)SNAPSHOT")
    # info(autosaveFields, "VAL PREC DESC EGU HOPR LOPR SEVR HIHI HIGH LOW LOLO HHSV HSV LSV LLSV")
}
#=================================================================#
# Template file: guardian_device_data.template
# Database for device data values within sxrss for the guardian
# And for snapshot data values
# Uses guardian_device_data.substitutions
# Macro description:                                                   #
#   - NAME       : Name                                                #
#   - DESC       : Description                                         #
#   - ID         : ASYN ID                                             #
#=====================================================================


# ex: FBCK:FB02:GN01:S1DES_STORED
# This records purpose is to copy data from device data pvs, and push to ASYN PV
record(ao, "FBCK:FB04:LG01:S3DES_STORED") { 
    field(DESC, "BC1 current setpoint")
    field(PINI, "YES")
    field(EGU, "amps")
    field(PREC, "1")
    field(DTYP, "asynFloat64")
	field(OMSL, "closed_loop") 
    field(DOL, "FBCK:FB04:LG01:S3DES_TEST CPP")  # TODO: Temporarily set as test
    field(OUT, "@asyn(GUARDIAN, 8, 0)STORED") 
    # info(autosaveFields, "VAL PREC DESC EGU HOPR LOPR SEVR HIHI HIGH LOW LOLO HHSV HSV LSV LLSV")
}

# ex: FBCK:FB02:GN01:S1DES_STORED_RBV
record(ai, "FBCK:FB04:LG01:S3DES_STORED_RBV") {
    field(DESC, "BC1 current setpoint")    
    field(EGU, "amps")
    field(PREC, "1")
    field(DTYP, "asynFloat64")
    field(SCAN, "I/O Intr")
    field(INP, "@asyn(GUARDIAN, 8, 0)STORED")
    # info(autosaveFields, "VAL PREC DESC EGU HOPR LOPR SEVR HIHI HIGH LOW LOLO HHSV HSV LSV LLSV")
}

# ex: FBCK:FB02:GN01:S1DES_SNAPSHOT
record(ai, "FBCK:FB04:LG01:S3DES_SNAPSHOT") {
    field(DESC, "BC1 current setpoint")
    field(SCAN, "I/O Intr")
    field(EGU, "amps")
    field(PREC, "1")
    field(DTYP, "asynFloat64")
    field(INP, "@asyn(GUARDIAN, 8, 0)SNAPSHOT")
    # info(autosaveFields, "VAL PREC DESC EGU HOPR LOPR SEVR HIHI HIGH LOW LOLO HHSV HSV LSV LLSV")
}
#=================================================================#
# Template file: guardian_device_data.template
# Database for device data values within sxrss for the guardian
# And for snapshot data values
# Uses guardian_device_data.substitutions
# Macro description:                                                   #
#   - NAME       : Name                                                #
#   - DESC       : Description                                         #
#   - ID         : ASYN ID                                             #
#=====================================================================


# ex: FBCK:FB02:GN01:S1DES_STORED
# This records purpose is to copy data from device data pvs, and push to ASYN PV
record(ao, "BLEN:LI21:265:AIMAXCUS1H_STORED") { 
    field(DESC, "BC1 current state for SXR")
    field(PINI, "YES")
    field(EGU, "amps")
    field(PREC, "1")
    field(DTYP, "asynFloat64")
	field(OMSL, "closed_loop") 
    field(DOL, "BLEN:LI21:265:AIMAXCUS1H_TEST CPP")  # TODO: Temporarily set as test
    field(OUT, "@asyn(GUARDIAN, 9, 0)STORED") 
    # info(autosaveFields, "VAL PREC DESC EGU HOPR LOPR SEVR HIHI HIGH LOW LOLO HHSV HSV LSV LLSV")
}

# ex: FBCK:FB02:GN01:S1DES_STORED_RBV
record(ai, "BLEN:LI21:265:AIMAXCUS1H_STORED_RBV") {
    field(DESC, "BC1 current state for SXR")    
    field(EGU, "amps")
    field(PREC, "1")
    field(DTYP, "asynFloat64")
    field(SCAN, "I/O Intr")
    field(INP, "@asyn(GUARDIAN, 9, 0)STORED")
    # info(autosaveFields, "VAL PREC DESC EGU HOPR LOPR SEVR HIHI HIGH LOW LOLO HHSV HSV LSV LLSV")
}

# ex: FBCK:FB02:GN01:S1DES_SNAPSHOT
record(ai, "BLEN:LI21:265:AIMAXCUS1H_SNAPSHOT") {
    field(DESC, "BC1 current state for SXR")
    field(SCAN, "I/O Intr")
    field(EGU, "amps")
    field(PREC, "1")
    field(DTYP, "asynFloat64")
    field(INP, "@asyn(GUARDIAN, 9, 0)SNAPSHOT")
    # info(autosaveFields, "VAL PREC DESC EGU HOPR LOPR SEVR HIHI HIGH LOW LOLO HHSV HSV LSV LLSV")
}
#=================================================================#
# Template file: guardian_device_data.template
# Database for device data values within sxrss for the guardian
# And for snapshot data values
# Uses guardian_device_data.substitutions
# Macro description:                                                   #
#   - NAME       : Name                                                #
#   - DESC       : Description                                         #
#   - ID         : ASYN ID                                             #
#=====================================================================


# ex: FBCK:FB02:GN01:S1DES_STORED
# This records purpose is to copy data from device data pvs, and push to ASYN PV
record(ao, "SIOC:SYS0:ML04:AO403_STORED") { 
    field(DESC, "BC1 current setpoint for SXR")
    field(PINI, "YES")
    field(EGU, "amps")
    field(PREC, "1")
    field(DTYP, "asynFloat64")
	field(OMSL, "closed_loop") 
    field(DOL, "SIOC:SYS0:ML04:AO403_TEST CPP")  # TODO: Temporarily set as test
    field(OUT, "@asyn(GUARDIAN, 10, 0)STORED") 
    # info(autosaveFields, "VAL PREC DESC EGU HOPR LOPR SEVR HIHI HIGH LOW LOLO HHSV HSV LSV LLSV")
}

# ex: FBCK:FB02:GN01:S1DES_STORED_RBV
record(ai, "SIOC:SYS0:ML04:AO403_STORED_RBV") {
    field(DESC, "BC1 current setpoint for SXR")    
    field(EGU, "amps")
    field(PREC, "1")
    field(DTYP, "asynFloat64")
    field(SCAN, "I/O Intr")
    field(INP, "@asyn(GUARDIAN, 10, 0)STORED")
    # info(autosaveFields, "VAL PREC DESC EGU HOPR LOPR SEVR HIHI HIGH LOW LOLO HHSV HSV LSV LLSV")
}

# ex: FBCK:FB02:GN01:S1DES_SNAPSHOT
record(ai, "SIOC:SYS0:ML04:AO403_SNAPSHOT") {
    field(DESC, "BC1 current setpoint for SXR")
    field(SCAN, "I/O Intr")
    field(EGU, "amps")
    field(PREC, "1")
    field(DTYP, "asynFloat64")
    field(INP, "@asyn(GUARDIAN, 10, 0)SNAPSHOT")
    # info(autosaveFields, "VAL PREC DESC EGU HOPR LOPR SEVR HIHI HIGH LOW LOLO HHSV HSV LSV LLSV")
}
#=================================================================#
# Template file: guardian_device_data.template
# Database for device data values within sxrss for the guardian
# And for snapshot data values
# Uses guardian_device_data.substitutions
# Macro description:                                                   #
#   - NAME       : Name                                                #
#   - DESC       : Description                                         #
#   - ID         : ASYN ID                                             #
#=====================================================================


# ex: FBCK:FB02:GN01:S1DES_STORED
# This records purpose is to copy data from device data pvs, and push to ASYN PV
record(ao, "ACCL:LI21:1:L1S_PDES:SETDATA_1_STORED") { 
    field(DESC, "L1S phase setpoint for SXR")
    field(PINI, "YES")
    field(EGU, "deg")
    field(PREC, "1")
    field(DTYP, "asynFloat64")
	field(OMSL, "closed_loop") 
    field(DOL, "ACCL:LI21:1:L1S_PDES:SETDATA_1_TEST CPP")  # TODO: Temporarily set as test
    field(OUT, "@asyn(GUARDIAN, 11, 0)STORED") 
    # info(autosaveFields, "VAL PREC DESC EGU HOPR LOPR SEVR HIHI HIGH LOW LOLO HHSV HSV LSV LLSV")
}

# ex: FBCK:FB02:GN01:S1DES_STORED_RBV
record(ai, "ACCL:LI21:1:L1S_PDES:SETDATA_1_STORED_RBV") {
    field(DESC, "L1S phase setpoint for SXR")    
    field(EGU, "deg")
    field(PREC, "1")
    field(DTYP, "asynFloat64")
    field(SCAN, "I/O Intr")
    field(INP, "@asyn(GUARDIAN, 11, 0)STORED")
    # info(autosaveFields, "VAL PREC DESC EGU HOPR LOPR SEVR HIHI HIGH LOW LOLO HHSV HSV LSV LLSV")
}

# ex: FBCK:FB02:GN01:S1DES_SNAPSHOT
record(ai, "ACCL:LI21:1:L1S_PDES:SETDATA_1_SNAPSHOT") {
    field(DESC, "L1S phase setpoint for SXR")
    field(SCAN, "I/O Intr")
    field(EGU, "deg")
    field(PREC, "1")
    field(DTYP, "asynFloat64")
    field(INP, "@asyn(GUARDIAN, 11, 0)SNAPSHOT")
    # info(autosaveFields, "VAL PREC DESC EGU HOPR LOPR SEVR HIHI HIGH LOW LOLO HHSV HSV LSV LLSV")
}
#=================================================================#
# Template file: guardian_device_data.template
# Database for device data values within sxrss for the guardian
# And for snapshot data values
# Uses guardian_device_data.substitutions
# Macro description:                                                   #
#   - NAME       : Name                                                #
#   - DESC       : Description                                         #
#   - ID         : ASYN ID                                             #
#=====================================================================


# ex: FBCK:FB02:GN01:S1DES_STORED
# This records purpose is to copy data from device data pvs, and push to ASYN PV
record(ao, "FBCK:FB04:LG01:BC2VERNIER_SXR_STORED") { 
    field(DESC, "BC2 energy vernier for SXR")
    field(PINI, "YES")
    field(EGU, "MeV")
    field(PREC, "1")
    field(DTYP, "asynFloat64")
	field(OMSL, "closed_loop") 
    field(DOL, "FBCK:FB04:LG01:BC2VERNIER_SXR_TEST CPP")  # TODO: Temporarily set as test
    field(OUT, "@asyn(GUARDIAN, 12, 0)STORED") 
    # info(autosaveFields, "VAL PREC DESC EGU HOPR LOPR SEVR HIHI HIGH LOW LOLO HHSV HSV LSV LLSV")
}

# ex: FBCK:FB02:GN01:S1DES_STORED_RBV
record(ai, "FBCK:FB04:LG01:BC2VERNIER_SXR_STORED_RBV") {
    field(DESC, "BC2 energy vernier for SXR")    
    field(EGU, "MeV")
    field(PREC, "1")
    field(DTYP, "asynFloat64")
    field(SCAN, "I/O Intr")
    field(INP, "@asyn(GUARDIAN, 12, 0)STORED")
    # info(autosaveFields, "VAL PREC DESC EGU HOPR LOPR SEVR HIHI HIGH LOW LOLO HHSV HSV LSV LLSV")
}

# ex: FBCK:FB02:GN01:S1DES_SNAPSHOT
record(ai, "FBCK:FB04:LG01:BC2VERNIER_SXR_SNAPSHOT") {
    field(DESC, "BC2 energy vernier for SXR")
    field(SCAN, "I/O Intr")
    field(EGU, "MeV")
    field(PREC, "1")
    field(DTYP, "asynFloat64")
    field(INP, "@asyn(GUARDIAN, 12, 0)SNAPSHOT")
    # info(autosaveFields, "VAL PREC DESC EGU HOPR LOPR SEVR HIHI HIGH LOW LOLO HHSV HSV LSV LLSV")
}
#=================================================================#
# Template file: guardian_device_data.template
# Database for device data values within sxrss for the guardian
# And for snapshot data values
# Uses guardian_device_data.substitutions
# Macro description:                                                   #
#   - NAME       : Name                                                #
#   - DESC       : Description                                         #
#   - ID         : ASYN ID                                             #
#=====================================================================


# ex: FBCK:FB02:GN01:S1DES_STORED
# This records purpose is to copy data from device data pvs, and push to ASYN PV
record(ao, "FBCK:FB04:LG01:S5DES_STORED") { 
    field(DESC, "BC2 current setpoint")
    field(PINI, "YES")
    field(EGU, "amps")
    field(PREC, "1")
    field(DTYP, "asynFloat64")
	field(OMSL, "closed_loop") 
    field(DOL, "FBCK:FB04:LG01:S5DES_TEST CPP")  # TODO: Temporarily set as test
    field(OUT, "@asyn(GUARDIAN, 13, 0)STORED") 
    # info(autosaveFields, "VAL PREC DESC EGU HOPR LOPR SEVR HIHI HIGH LOW LOLO HHSV HSV LSV LLSV")
}

# ex: FBCK:FB02:GN01:S1DES_STORED_RBV
record(ai, "FBCK:FB04:LG01:S5DES_STORED_RBV") {
    field(DESC, "BC2 current setpoint")    
    field(EGU, "amps")
    field(PREC, "1")
    field(DTYP, "asynFloat64")
    field(SCAN, "I/O Intr")
    field(INP, "@asyn(GUARDIAN, 13, 0)STORED")
    # info(autosaveFields, "VAL PREC DESC EGU HOPR LOPR SEVR HIHI HIGH LOW LOLO HHSV HSV LSV LLSV")
}

# ex: FBCK:FB02:GN01:S1DES_SNAPSHOT
record(ai, "FBCK:FB04:LG01:S5DES_SNAPSHOT") {
    field(DESC, "BC2 current setpoint")
    field(SCAN, "I/O Intr")
    field(EGU, "amps")
    field(PREC, "1")
    field(DTYP, "asynFloat64")
    field(INP, "@asyn(GUARDIAN, 13, 0)SNAPSHOT")
    # info(autosaveFields, "VAL PREC DESC EGU HOPR LOPR SEVR HIHI HIGH LOW LOLO HHSV HSV LSV LLSV")
}
#=================================================================#
# Template file: guardian_device_data.template
# Database for device data values within sxrss for the guardian
# And for snapshot data values
# Uses guardian_device_data.substitutions
# Macro description:                                                   #
#   - NAME       : Name                                                #
#   - DESC       : Description                                         #
#   - ID         : ASYN ID                                             #
#=====================================================================


# ex: FBCK:FB02:GN01:S1DES_STORED
# This records purpose is to copy data from device data pvs, and push to ASYN PV
record(ao, "SIOC:SYS0:ML04:AO401_STORED") { 
    field(DESC, "BC2 current setpt for SXR")
    field(PINI, "YES")
    field(EGU, "amps")
    field(PREC, "1")
    field(DTYP, "asynFloat64")
	field(OMSL, "closed_loop") 
    field(DOL, "SIOC:SYS0:ML04:AO401_TEST CPP")  # TODO: Temporarily set as test
    field(OUT, "@asyn(GUARDIAN, 14, 0)STORED") 
    # info(autosaveFields, "VAL PREC DESC EGU HOPR LOPR SEVR HIHI HIGH LOW LOLO HHSV HSV LSV LLSV")
}

# ex: FBCK:FB02:GN01:S1DES_STORED_RBV
record(ai, "SIOC:SYS0:ML04:AO401_STORED_RBV") {
    field(DESC, "BC2 current setpt for SXR")    
    field(EGU, "amps")
    field(PREC, "1")
    field(DTYP, "asynFloat64")
    field(SCAN, "I/O Intr")
    field(INP, "@asyn(GUARDIAN, 14, 0)STORED")
    # info(autosaveFields, "VAL PREC DESC EGU HOPR LOPR SEVR HIHI HIGH LOW LOLO HHSV HSV LSV LLSV")
}

# ex: FBCK:FB02:GN01:S1DES_SNAPSHOT
record(ai, "SIOC:SYS0:ML04:AO401_SNAPSHOT") {
    field(DESC, "BC2 current setpt for SXR")
    field(SCAN, "I/O Intr")
    field(EGU, "amps")
    field(PREC, "1")
    field(DTYP, "asynFloat64")
    field(INP, "@asyn(GUARDIAN, 14, 0)SNAPSHOT")
    # info(autosaveFields, "VAL PREC DESC EGU HOPR LOPR SEVR HIHI HIGH LOW LOLO HHSV HSV LSV LLSV")
}
#=================================================================#
# Template file: guardian_device_data.template
# Database for device data values within sxrss for the guardian
# And for snapshot data values
# Uses guardian_device_data.substitutions
# Macro description:                                                   #
#   - NAME       : Name                                                #
#   - DESC       : Description                                         #
#   - ID         : ASYN ID                                             #
#=====================================================================


# ex: FBCK:FB02:GN01:S1DES_STORED
# This records purpose is to copy data from device data pvs, and push to ASYN PV
record(ao, "BLEN:LI24:886:BIMAXCUS1H_STORED") { 
    field(DESC, "BC2 current state for SXR")
    field(PINI, "YES")
    field(EGU, "amps")
    field(PREC, "1")
    field(DTYP, "asynFloat64")
	field(OMSL, "closed_loop") 
    field(DOL, "BLEN:LI24:886:BIMAXCUS1H_TEST CPP")  # TODO: Temporarily set as test
    field(OUT, "@asyn(GUARDIAN, 15, 0)STORED") 
    # info(autosaveFields, "VAL PREC DESC EGU HOPR LOPR SEVR HIHI HIGH LOW LOLO HHSV HSV LSV LLSV")
}

# ex: FBCK:FB02:GN01:S1DES_STORED_RBV
record(ai, "BLEN:LI24:886:BIMAXCUS1H_STORED_RBV") {
    field(DESC, "BC2 current state for SXR")    
    field(EGU, "amps")
    field(PREC, "1")
    field(DTYP, "asynFloat64")
    field(SCAN, "I/O Intr")
    field(INP, "@asyn(GUARDIAN, 15, 0)STORED")
    # info(autosaveFields, "VAL PREC DESC EGU HOPR LOPR SEVR HIHI HIGH LOW LOLO HHSV HSV LSV LLSV")
}

# ex: FBCK:FB02:GN01:S1DES_SNAPSHOT
record(ai, "BLEN:LI24:886:BIMAXCUS1H_SNAPSHOT") {
    field(DESC, "BC2 current state for SXR")
    field(SCAN, "I/O Intr")
    field(EGU, "amps")
    field(PREC, "1")
    field(DTYP, "asynFloat64")
    field(INP, "@asyn(GUARDIAN, 15, 0)SNAPSHOT")
    # info(autosaveFields, "VAL PREC DESC EGU HOPR LOPR SEVR HIHI HIGH LOW LOLO HHSV HSV LSV LLSV")
}
#=================================================================#
# Template file: guardian_device_data.template
# Database for device data values within sxrss for the guardian
# And for snapshot data values
# Uses guardian_device_data.substitutions
# Macro description:                                                   #
#   - NAME       : Name                                                #
#   - DESC       : Description                                         #
#   - ID         : ASYN ID                                             #
#=====================================================================


# ex: FBCK:FB02:GN01:S1DES_STORED
# This records purpose is to copy data from device data pvs, and push to ASYN PV
record(ao, "FBCK:FB04:LG01:CHIRPDES_STORED") { 
    field(DESC, "L2 chirp setpoint")
    field(PINI, "YES")
    field(EGU, "MeV")
    field(PREC, "1")
    field(DTYP, "asynFloat64")
	field(OMSL, "closed_loop") 
    field(DOL, "FBCK:FB04:LG01:CHIRPDES_TEST CPP")  # TODO: Temporarily set as test
    field(OUT, "@asyn(GUARDIAN, 16, 0)STORED") 
    # info(autosaveFields, "VAL PREC DESC EGU HOPR LOPR SEVR HIHI HIGH LOW LOLO HHSV HSV LSV LLSV")
}

# ex: FBCK:FB02:GN01:S1DES_STORED_RBV
record(ai, "FBCK:FB04:LG01:CHIRPDES_STORED_RBV") {
    field(DESC, "L2 chirp setpoint")    
    field(EGU, "MeV")
    field(PREC, "1")
    field(DTYP, "asynFloat64")
    field(SCAN, "I/O Intr")
    field(INP, "@asyn(GUARDIAN, 16, 0)STORED")
    # info(autosaveFields, "VAL PREC DESC EGU HOPR LOPR SEVR HIHI HIGH LOW LOLO HHSV HSV LSV LLSV")
}

# ex: FBCK:FB02:GN01:S1DES_SNAPSHOT
record(ai, "FBCK:FB04:LG01:CHIRPDES_SNAPSHOT") {
    field(DESC, "L2 chirp setpoint")
    field(SCAN, "I/O Intr")
    field(EGU, "MeV")
    field(PREC, "1")
    field(DTYP, "asynFloat64")
    field(INP, "@asyn(GUARDIAN, 16, 0)SNAPSHOT")
    # info(autosaveFields, "VAL PREC DESC EGU HOPR LOPR SEVR HIHI HIGH LOW LOLO HHSV HSV LSV LLSV")
}
#=================================================================#
# Template file: guardian_device_data.template
# Database for device data values within sxrss for the guardian
# And for snapshot data values
# Uses guardian_device_data.substitutions
# Macro description:                                                   #
#   - NAME       : Name                                                #
#   - DESC       : Description                                         #
#   - ID         : ASYN ID                                             #
#=====================================================================


# ex: FBCK:FB02:GN01:S1DES_STORED
# This records purpose is to copy data from device data pvs, and push to ASYN PV
record(ao, "SIOC:SYS0:ML04:AO406_STORED") { 
    field(DESC, "L3 ampl setpt for SXR")
    field(PINI, "YES")
    field(EGU, "MeV")
    field(PREC, "1")
    field(DTYP, "asynFloat64")
	field(OMSL, "closed_loop") 
    field(DOL, "SIOC:SYS0:ML04:AO406_TEST CPP")  # TODO: Temporarily set as test
    field(OUT, "@asyn(GUARDIAN, 17, 0)STORED") 
    # info(autosaveFields, "VAL PREC DESC EGU HOPR LOPR SEVR HIHI HIGH LOW LOLO HHSV HSV LSV LLSV")
}

# ex: FBCK:FB02:GN01:S1DES_STORED_RBV
record(ai, "SIOC:SYS0:ML04:AO406_STORED_RBV") {
    field(DESC, "L3 ampl setpt for SXR")    
    field(EGU, "MeV")
    field(PREC, "1")
    field(DTYP, "asynFloat64")
    field(SCAN, "I/O Intr")
    field(INP, "@asyn(GUARDIAN, 17, 0)STORED")
    # info(autosaveFields, "VAL PREC DESC EGU HOPR LOPR SEVR HIHI HIGH LOW LOLO HHSV HSV LSV LLSV")
}

# ex: FBCK:FB02:GN01:S1DES_SNAPSHOT
record(ai, "SIOC:SYS0:ML04:AO406_SNAPSHOT") {
    field(DESC, "L3 ampl setpt for SXR")
    field(SCAN, "I/O Intr")
    field(EGU, "MeV")
    field(PREC, "1")
    field(DTYP, "asynFloat64")
    field(INP, "@asyn(GUARDIAN, 17, 0)SNAPSHOT")
    # info(autosaveFields, "VAL PREC DESC EGU HOPR LOPR SEVR HIHI HIGH LOW LOLO HHSV HSV LSV LLSV")
}
#=================================================================#
# Template file: guardian_device_data.template
# Database for device data values within sxrss for the guardian
# And for snapshot data values
# Uses guardian_device_data.substitutions
# Macro description:                                                   #
#   - NAME       : Name                                                #
#   - DESC       : Description                                         #
#   - ID         : ASYN ID                                             #
#=====================================================================


# ex: FBCK:FB02:GN01:S1DES_STORED
# This records purpose is to copy data from device data pvs, and push to ASYN PV
record(ao, "SIOC:SYS0:ML04:CALC405_STORED") { 
    field(DESC, "L3 ampl state for SXR")
    field(PINI, "YES")
    field(EGU, "MeV")
    field(PREC, "1")
    field(DTYP, "asynFloat64")
	field(OMSL, "closed_loop") 
    field(DOL, "SIOC:SYS0:ML04:CALC405_TEST CPP")  # TODO: Temporarily set as test
    field(OUT, "@asyn(GUARDIAN, 18, 0)STORED") 
    # info(autosaveFields, "VAL PREC DESC EGU HOPR LOPR SEVR HIHI HIGH LOW LOLO HHSV HSV LSV LLSV")
}

# ex: FBCK:FB02:GN01:S1DES_STORED_RBV
record(ai, "SIOC:SYS0:ML04:CALC405_STORED_RBV") {
    field(DESC, "L3 ampl state for SXR")    
    field(EGU, "MeV")
    field(PREC, "1")
    field(DTYP, "asynFloat64")
    field(SCAN, "I/O Intr")
    field(INP, "@asyn(GUARDIAN, 18, 0)STORED")
    # info(autosaveFields, "VAL PREC DESC EGU HOPR LOPR SEVR HIHI HIGH LOW LOLO HHSV HSV LSV LLSV")
}

# ex: FBCK:FB02:GN01:S1DES_SNAPSHOT
record(ai, "SIOC:SYS0:ML04:CALC405_SNAPSHOT") {
    field(DESC, "L3 ampl state for SXR")
    field(SCAN, "I/O Intr")
    field(EGU, "MeV")
    field(PREC, "1")
    field(DTYP, "asynFloat64")
    field(INP, "@asyn(GUARDIAN, 18, 0)SNAPSHOT")
    # info(autosaveFields, "VAL PREC DESC EGU HOPR LOPR SEVR HIHI HIGH LOW LOLO HHSV HSV LSV LLSV")
}
#=================================================================#
# Template file: guardian_device_data.template
# Database for device data values within sxrss for the guardian
# And for snapshot data values
# Uses guardian_device_data.substitutions
# Macro description:                                                   #
#   - NAME       : Name                                                #
#   - DESC       : Description                                         #
#   - ID         : ASYN ID                                             #
#=====================================================================


# ex: FBCK:FB02:GN01:S1DES_STORED
# This records purpose is to copy data from device data pvs, and push to ASYN PV
record(ao, "FBCK:FB04:LG01:DL2VERNIER_SXR_STORED") { 
    field(DESC, "DL2 energy vernier for SXR")
    field(PINI, "YES")
    field(EGU, "MeV")
    field(PREC, "1")
    field(DTYP, "asynFloat64")
	field(OMSL, "closed_loop") 
    field(DOL, "FBCK:FB04:LG01:DL2VERNIER_SXR_TEST CPP")  # TODO: Temporarily set as test
    field(OUT, "@asyn(GUARDIAN, 19, 0)STORED") 
    # info(autosaveFields, "VAL PREC DESC EGU HOPR LOPR SEVR HIHI HIGH LOW LOLO HHSV HSV LSV LLSV")
}

# ex: FBCK:FB02:GN01:S1DES_STORED_RBV
record(ai, "FBCK:FB04:LG01:DL2VERNIER_SXR_STORED_RBV") {
    field(DESC, "DL2 energy vernier for SXR")    
    field(EGU, "MeV")
    field(PREC, "1")
    field(DTYP, "asynFloat64")
    field(SCAN, "I/O Intr")
    field(INP, "@asyn(GUARDIAN, 19, 0)STORED")
    # info(autosaveFields, "VAL PREC DESC EGU HOPR LOPR SEVR HIHI HIGH LOW LOLO HHSV HSV LSV LLSV")
}

# ex: FBCK:FB02:GN01:S1DES_SNAPSHOT
record(ai, "FBCK:FB04:LG01:DL2VERNIER_SXR_SNAPSHOT") {
    field(DESC, "DL2 energy vernier for SXR")
    field(SCAN, "I/O Intr")
    field(EGU, "MeV")
    field(PREC, "1")
    field(DTYP, "asynFloat64")
    field(INP, "@asyn(GUARDIAN, 19, 0)SNAPSHOT")
    # info(autosaveFields, "VAL PREC DESC EGU HOPR LOPR SEVR HIHI HIGH LOW LOLO HHSV HSV LSV LLSV")
}
#=================================================================#
# Template file: guardian_device_data.template
# Database for device data values within sxrss for the guardian
# And for snapshot data values
# Uses guardian_device_data.substitutions
# Macro description:                                                   #
#   - NAME       : Name                                                #
#   - DESC       : Description                                         #
#   - ID         : ASYN ID                                             #
#=====================================================================


# ex: FBCK:FB02:GN01:S1DES_STORED
# This records purpose is to copy data from device data pvs, and push to ASYN PV
record(ao, "BEND:DMPS:400:BDES_STORED") { 
    field(DESC, "Dump bend BDES")
    field(PINI, "YES")
    field(EGU, "GeV")
    field(PREC, "3")
    field(DTYP, "asynFloat64")
	field(OMSL, "closed_loop") 
    field(DOL, "BEND:DMPS:400:BDES_TEST CPP")  # TODO: Temporarily set as test
    field(OUT, "@asyn(GUARDIAN, 20, 0)STORED") 
    # info(autosaveFields, "VAL PREC DESC EGU HOPR LOPR SEVR HIHI HIGH LOW LOLO HHSV HSV LSV LLSV")
}

# ex: FBCK:FB02:GN01:S1DES_STORED_RBV
record(ai, "BEND:DMPS:400:BDES_STORED_RBV") {
    field(DESC, "Dump bend BDES")    
    field(EGU, "GeV")
    field(PREC, "3")
    field(DTYP, "asynFloat64")
    field(SCAN, "I/O Intr")
    field(INP, "@asyn(GUARDIAN, 20, 0)STORED")
    # info(autosaveFields, "VAL PREC DESC EGU HOPR LOPR SEVR HIHI HIGH LOW LOLO HHSV HSV LSV LLSV")
}

# ex: FBCK:FB02:GN01:S1DES_SNAPSHOT
record(ai, "BEND:DMPS:400:BDES_SNAPSHOT") {
    field(DESC, "Dump bend BDES")
    field(SCAN, "I/O Intr")
    field(EGU, "GeV")
    field(PREC, "3")
    field(DTYP, "asynFloat64")
    field(INP, "@asyn(GUARDIAN, 20, 0)SNAPSHOT")
    # info(autosaveFields, "VAL PREC DESC EGU HOPR LOPR SEVR HIHI HIGH LOW LOLO HHSV HSV LSV LLSV")
}
#=================================================================#
# Template file: guardian_device_data.template
# Database for device data values within sxrss for the guardian
# And for snapshot data values
# Uses guardian_device_data.substitutions
# Macro description:                                                   #
#   - NAME       : Name                                                #
#   - DESC       : Description                                         #
#   - ID         : ASYN ID                                             #
#=====================================================================


# ex: FBCK:FB02:GN01:S1DES_STORED
# This records purpose is to copy data from device data pvs, and push to ASYN PV
record(ao, "BEND:DMPS:400:BACT_STORED") { 
    field(DESC, "Dump bend BACT")
    field(PINI, "YES")
    field(EGU, "GeV")
    field(PREC, "3")
    field(DTYP, "asynFloat64")
	field(OMSL, "closed_loop") 
    field(DOL, "BEND:DMPS:400:BACT_TEST CPP")  # TODO: Temporarily set as test
    field(OUT, "@asyn(GUARDIAN, 21, 0)STORED") 
    # info(autosaveFields, "VAL PREC DESC EGU HOPR LOPR SEVR HIHI HIGH LOW LOLO HHSV HSV LSV LLSV")
}

# ex: FBCK:FB02:GN01:S1DES_STORED_RBV
record(ai, "BEND:DMPS:400:BACT_STORED_RBV") {
    field(DESC, "Dump bend BACT")    
    field(EGU, "GeV")
    field(PREC, "3")
    field(DTYP, "asynFloat64")
    field(SCAN, "I/O Intr")
    field(INP, "@asyn(GUARDIAN, 21, 0)STORED")
    # info(autosaveFields, "VAL PREC DESC EGU HOPR LOPR SEVR HIHI HIGH LOW LOLO HHSV HSV LSV LLSV")
}

# ex: FBCK:FB02:GN01:S1DES_SNAPSHOT
record(ai, "BEND:DMPS:400:BACT_SNAPSHOT") {
    field(DESC, "Dump bend BACT")
    field(SCAN, "I/O Intr")
    field(EGU, "GeV")
    field(PREC, "3")
    field(DTYP, "asynFloat64")
    field(INP, "@asyn(GUARDIAN, 21, 0)SNAPSHOT")
    # info(autosaveFields, "VAL PREC DESC EGU HOPR LOPR SEVR HIHI HIGH LOW LOLO HHSV HSV LSV LLSV")
}
#=================================================================#
# Template file: guardian_device_data.template
# Database for device data values within sxrss for the guardian
# And for snapshot data values
# Uses guardian_device_data.substitutions
# Macro description:                                                   #
#   - NAME       : Name                                                #
#   - DESC       : Description                                         #
#   - ID         : ASYN ID                                             #
#=====================================================================


# ex: FBCK:FB02:GN01:S1DES_STORED
# This records purpose is to copy data from device data pvs, and push to ASYN PV
record(ao, "COLL:LI21:236:LVPOS_STORED") { 
    field(DESC, "BC1 left (+) collimator position")
    field(PINI, "YES")
    field(EGU, "mm")
    field(PREC, "3")
    field(DTYP, "asynFloat64")
	field(OMSL, "closed_loop") 
    field(DOL, "COLL:LI21:236:LVPOS_TEST CPP")  # TODO: Temporarily set as test
    field(OUT, "@asyn(GUARDIAN, 22, 0)STORED") 
    # info(autosaveFields, "VAL PREC DESC EGU HOPR LOPR SEVR HIHI HIGH LOW LOLO HHSV HSV LSV LLSV")
}

# ex: FBCK:FB02:GN01:S1DES_STORED_RBV
record(ai, "COLL:LI21:236:LVPOS_STORED_RBV") {
    field(DESC, "BC1 left (+) collimator position")    
    field(EGU, "mm")
    field(PREC, "3")
    field(DTYP, "asynFloat64")
    field(SCAN, "I/O Intr")
    field(INP, "@asyn(GUARDIAN, 22, 0)STORED")
    # info(autosaveFields, "VAL PREC DESC EGU HOPR LOPR SEVR HIHI HIGH LOW LOLO HHSV HSV LSV LLSV")
}

# ex: FBCK:FB02:GN01:S1DES_SNAPSHOT
record(ai, "COLL:LI21:236:LVPOS_SNAPSHOT") {
    field(DESC, "BC1 left (+) collimator position")
    field(SCAN, "I/O Intr")
    field(EGU, "mm")
    field(PREC, "3")
    field(DTYP, "asynFloat64")
    field(INP, "@asyn(GUARDIAN, 22, 0)SNAPSHOT")
    # info(autosaveFields, "VAL PREC DESC EGU HOPR LOPR SEVR HIHI HIGH LOW LOLO HHSV HSV LSV LLSV")
}
#=================================================================#
# Template file: guardian_device_data.template
# Database for device data values within sxrss for the guardian
# And for snapshot data values
# Uses guardian_device_data.substitutions
# Macro description:                                                   #
#   - NAME       : Name                                                #
#   - DESC       : Description                                         #
#   - ID         : ASYN ID                                             #
#=====================================================================


# ex: FBCK:FB02:GN01:S1DES_STORED
# This records purpose is to copy data from device data pvs, and push to ASYN PV
record(ao, "COLL:LI21:235:LVPOS_STORED") { 
    field(DESC, "BC1 right (-) collimator position")
    field(PINI, "YES")
    field(EGU, "mm")
    field(PREC, "3")
    field(DTYP, "asynFloat64")
	field(OMSL, "closed_loop") 
    field(DOL, "COLL:LI21:235:LVPOS_TEST CPP")  # TODO: Temporarily set as test
    field(OUT, "@asyn(GUARDIAN, 23, 0)STORED") 
    # info(autosaveFields, "VAL PREC DESC EGU HOPR LOPR SEVR HIHI HIGH LOW LOLO HHSV HSV LSV LLSV")
}

# ex: FBCK:FB02:GN01:S1DES_STORED_RBV
record(ai, "COLL:LI21:235:LVPOS_STORED_RBV") {
    field(DESC, "BC1 right (-) collimator position")    
    field(EGU, "mm")
    field(PREC, "3")
    field(DTYP, "asynFloat64")
    field(SCAN, "I/O Intr")
    field(INP, "@asyn(GUARDIAN, 23, 0)STORED")
    # info(autosaveFields, "VAL PREC DESC EGU HOPR LOPR SEVR HIHI HIGH LOW LOLO HHSV HSV LSV LLSV")
}

# ex: FBCK:FB02:GN01:S1DES_SNAPSHOT
record(ai, "COLL:LI21:235:LVPOS_SNAPSHOT") {
    field(DESC, "BC1 right (-) collimator position")
    field(SCAN, "I/O Intr")
    field(EGU, "mm")
    field(PREC, "3")
    field(DTYP, "asynFloat64")
    field(INP, "@asyn(GUARDIAN, 23, 0)SNAPSHOT")
    # info(autosaveFields, "VAL PREC DESC EGU HOPR LOPR SEVR HIHI HIGH LOW LOLO HHSV HSV LSV LLSV")
}
#=================================================================#
# Template file: guardian_device_data.template
# Database for device data values within sxrss for the guardian
# And for snapshot data values
# Uses guardian_device_data.substitutions
# Macro description:                                                   #
#   - NAME       : Name                                                #
#   - DESC       : Description                                         #
#   - ID         : ASYN ID                                             #
#=====================================================================


# ex: FBCK:FB02:GN01:S1DES_STORED
# This records purpose is to copy data from device data pvs, and push to ASYN PV
record(ao, "FOIL:LI24:804:MOTR_RBV_STORED") { 
    field(DESC, "LI24 Slotted Foil 804 position")
    field(PINI, "YES")
    field(EGU, "mm")
    field(PREC, "1")
    field(DTYP, "asynFloat64")
	field(OMSL, "closed_loop") 
    field(DOL, "FOIL:LI24:804:MOTR_RBV_TEST CPP")  # TODO: Temporarily set as test
    field(OUT, "@asyn(GUARDIAN, 24, 0)STORED") 
    # info(autosaveFields, "VAL PREC DESC EGU HOPR LOPR SEVR HIHI HIGH LOW LOLO HHSV HSV LSV LLSV")
}

# ex: FBCK:FB02:GN01:S1DES_STORED_RBV
record(ai, "FOIL:LI24:804:MOTR_RBV_STORED_RBV") {
    field(DESC, "LI24 Slotted Foil 804 position")    
    field(EGU, "mm")
    field(PREC, "1")
    field(DTYP, "asynFloat64")
    field(SCAN, "I/O Intr")
    field(INP, "@asyn(GUARDIAN, 24, 0)STORED")
    # info(autosaveFields, "VAL PREC DESC EGU HOPR LOPR SEVR HIHI HIGH LOW LOLO HHSV HSV LSV LLSV")
}

# ex: FBCK:FB02:GN01:S1DES_SNAPSHOT
record(ai, "FOIL:LI24:804:MOTR_RBV_SNAPSHOT") {
    field(DESC, "LI24 Slotted Foil 804 position")
    field(SCAN, "I/O Intr")
    field(EGU, "mm")
    field(PREC, "1")
    field(DTYP, "asynFloat64")
    field(INP, "@asyn(GUARDIAN, 24, 0)SNAPSHOT")
    # info(autosaveFields, "VAL PREC DESC EGU HOPR LOPR SEVR HIHI HIGH LOW LOLO HHSV HSV LSV LLSV")
}
#=================================================================#
# Template file: guardian_device_data.template
# Database for device data values within sxrss for the guardian
# And for snapshot data values
# Uses guardian_device_data.substitutions
# Macro description:                                                   #
#   - NAME       : Name                                                #
#   - DESC       : Description                                         #
#   - ID         : ASYN ID                                             #
#=====================================================================


# ex: FBCK:FB02:GN01:S1DES_STORED
# This records purpose is to copy data from device data pvs, and push to ASYN PV
record(ao, "FOIL:LI24:807:MOTR_RBV_STORED") { 
    field(DESC, "LI24 Slotted Foil 807 position")
    field(PINI, "YES")
    field(EGU, "mm")
    field(PREC, "1")
    field(DTYP, "asynFloat64")
	field(OMSL, "closed_loop") 
    field(DOL, "FOIL:LI24:807:MOTR_RBV_TEST CPP")  # TODO: Temporarily set as test
    field(OUT, "@asyn(GUARDIAN, 25, 0)STORED") 
    # info(autosaveFields, "VAL PREC DESC EGU HOPR LOPR SEVR HIHI HIGH LOW LOLO HHSV HSV LSV LLSV")
}

# ex: FBCK:FB02:GN01:S1DES_STORED_RBV
record(ai, "FOIL:LI24:807:MOTR_RBV_STORED_RBV") {
    field(DESC, "LI24 Slotted Foil 807 position")    
    field(EGU, "mm")
    field(PREC, "1")
    field(DTYP, "asynFloat64")
    field(SCAN, "I/O Intr")
    field(INP, "@asyn(GUARDIAN, 25, 0)STORED")
    # info(autosaveFields, "VAL PREC DESC EGU HOPR LOPR SEVR HIHI HIGH LOW LOLO HHSV HSV LSV LLSV")
}

# ex: FBCK:FB02:GN01:S1DES_SNAPSHOT
record(ai, "FOIL:LI24:807:MOTR_RBV_SNAPSHOT") {
    field(DESC, "LI24 Slotted Foil 807 position")
    field(SCAN, "I/O Intr")
    field(EGU, "mm")
    field(PREC, "1")
    field(DTYP, "asynFloat64")
    field(INP, "@asyn(GUARDIAN, 25, 0)SNAPSHOT")
    # info(autosaveFields, "VAL PREC DESC EGU HOPR LOPR SEVR HIHI HIGH LOW LOLO HHSV HSV LSV LLSV")
}
#=================================================================#
# Template file: guardian_device_data.template
# Database for device data values within sxrss for the guardian
# And for snapshot data values
# Uses guardian_device_data.substitutions
# Macro description:                                                   #
#   - NAME       : Name                                                #
#   - DESC       : Description                                         #
#   - ID         : ASYN ID                                             #
#=====================================================================


# ex: FBCK:FB02:GN01:S1DES_STORED
# This records purpose is to copy data from device data pvs, and push to ASYN PV
record(ao, "WPLT:LR20:220:LHWP_ANGLE_STORED") { 
    field(DESC, "Laser Heater 1 Waveplate Angle")
    field(PINI, "YES")
    field(EGU, "deg")
    field(PREC, "3")
    field(DTYP, "asynFloat64")
	field(OMSL, "closed_loop") 
    field(DOL, "WPLT:LR20:220:LHWP_ANGLE_TEST CPP")  # TODO: Temporarily set as test
    field(OUT, "@asyn(GUARDIAN, 26, 0)STORED") 
    # info(autosaveFields, "VAL PREC DESC EGU HOPR LOPR SEVR HIHI HIGH LOW LOLO HHSV HSV LSV LLSV")
}

# ex: FBCK:FB02:GN01:S1DES_STORED_RBV
record(ai, "WPLT:LR20:220:LHWP_ANGLE_STORED_RBV") {
    field(DESC, "Laser Heater 1 Waveplate Angle")    
    field(EGU, "deg")
    field(PREC, "3")
    field(DTYP, "asynFloat64")
    field(SCAN, "I/O Intr")
    field(INP, "@asyn(GUARDIAN, 26, 0)STORED")
    # info(autosaveFields, "VAL PREC DESC EGU HOPR LOPR SEVR HIHI HIGH LOW LOLO HHSV HSV LSV LLSV")
}

# ex: FBCK:FB02:GN01:S1DES_SNAPSHOT
record(ai, "WPLT:LR20:220:LHWP_ANGLE_SNAPSHOT") {
    field(DESC, "Laser Heater 1 Waveplate Angle")
    field(SCAN, "I/O Intr")
    field(EGU, "deg")
    field(PREC, "3")
    field(DTYP, "asynFloat64")
    field(INP, "@asyn(GUARDIAN, 26, 0)SNAPSHOT")
    # info(autosaveFields, "VAL PREC DESC EGU HOPR LOPR SEVR HIHI HIGH LOW LOLO HHSV HSV LSV LLSV")
}
#=================================================================#
# Template file: guardian_device_data.template
# Database for device data values within sxrss for the guardian
# And for snapshot data values
# Uses guardian_device_data.substitutions
# Macro description:                                                   #
#   - NAME       : Name                                                #
#   - DESC       : Description                                         #
#   - ID         : ASYN ID                                             #
#=====================================================================


# ex: FBCK:FB02:GN01:S1DES_STORED
# This records purpose is to copy data from device data pvs, and push to ASYN PV
record(ao, "LHDL:LR20:260:TACT_STORED") { 
    field(DESC, "Laser Heater 1 Delay")
    field(PINI, "YES")
    field(EGU, "ps")
    field(PREC, "3")
    field(DTYP, "asynFloat64")
	field(OMSL, "closed_loop") 
    field(DOL, "LHDL:LR20:260:TACT_TEST CPP")  # TODO: Temporarily set as test
    field(OUT, "@asyn(GUARDIAN, 27, 0)STORED") 
    # info(autosaveFields, "VAL PREC DESC EGU HOPR LOPR SEVR HIHI HIGH LOW LOLO HHSV HSV LSV LLSV")
}

# ex: FBCK:FB02:GN01:S1DES_STORED_RBV
record(ai, "LHDL:LR20:260:TACT_STORED_RBV") {
    field(DESC, "Laser Heater 1 Delay")    
    field(EGU, "ps")
    field(PREC, "3")
    field(DTYP, "asynFloat64")
    field(SCAN, "I/O Intr")
    field(INP, "@asyn(GUARDIAN, 27, 0)STORED")
    # info(autosaveFields, "VAL PREC DESC EGU HOPR LOPR SEVR HIHI HIGH LOW LOLO HHSV HSV LSV LLSV")
}

# ex: FBCK:FB02:GN01:S1DES_SNAPSHOT
record(ai, "LHDL:LR20:260:TACT_SNAPSHOT") {
    field(DESC, "Laser Heater 1 Delay")
    field(SCAN, "I/O Intr")
    field(EGU, "ps")
    field(PREC, "3")
    field(DTYP, "asynFloat64")
    field(INP, "@asyn(GUARDIAN, 27, 0)SNAPSHOT")
    # info(autosaveFields, "VAL PREC DESC EGU HOPR LOPR SEVR HIHI HIGH LOW LOLO HHSV HSV LSV LLSV")
}
#=================================================================#
# Template file: guardian_device_data.template
# Database for device data values within sxrss for the guardian
# And for snapshot data values
# Uses guardian_device_data.substitutions
# Macro description:                                                   #
#   - NAME       : Name                                                #
#   - DESC       : Description                                         #
#   - ID         : ASYN ID                                             #
#=====================================================================


# ex: FBCK:FB02:GN01:S1DES_STORED
# This records purpose is to copy data from device data pvs, and push to ASYN PV
record(ao, "WPLT:LR20:230:LHWP_ANGLE_STORED") { 
    field(DESC, "Laser Heater 2 Waveplate Angle")
    field(PINI, "YES")
    field(EGU, "deg")
    field(PREC, "3")
    field(DTYP, "asynFloat64")
	field(OMSL, "closed_loop") 
    field(DOL, "WPLT:LR20:230:LHWP_ANGLE_TEST CPP")  # TODO: Temporarily set as test
    field(OUT, "@asyn(GUARDIAN, 28, 0)STORED") 
    # info(autosaveFields, "VAL PREC DESC EGU HOPR LOPR SEVR HIHI HIGH LOW LOLO HHSV HSV LSV LLSV")
}

# ex: FBCK:FB02:GN01:S1DES_STORED_RBV
record(ai, "WPLT:LR20:230:LHWP_ANGLE_STORED_RBV") {
    field(DESC, "Laser Heater 2 Waveplate Angle")    
    field(EGU, "deg")
    field(PREC, "3")
    field(DTYP, "asynFloat64")
    field(SCAN, "I/O Intr")
    field(INP, "@asyn(GUARDIAN, 28, 0)STORED")
    # info(autosaveFields, "VAL PREC DESC EGU HOPR LOPR SEVR HIHI HIGH LOW LOLO HHSV HSV LSV LLSV")
}

# ex: FBCK:FB02:GN01:S1DES_SNAPSHOT
record(ai, "WPLT:LR20:230:LHWP_ANGLE_SNAPSHOT") {
    field(DESC, "Laser Heater 2 Waveplate Angle")
    field(SCAN, "I/O Intr")
    field(EGU, "deg")
    field(PREC, "3")
    field(DTYP, "asynFloat64")
    field(INP, "@asyn(GUARDIAN, 28, 0)SNAPSHOT")
    # info(autosaveFields, "VAL PREC DESC EGU HOPR LOPR SEVR HIHI HIGH LOW LOLO HHSV HSV LSV LLSV")
}
#=================================================================#
# Template file: guardian_device_data.template
# Database for device data values within sxrss for the guardian
# And for snapshot data values
# Uses guardian_device_data.substitutions
# Macro description:                                                   #
#   - NAME       : Name                                                #
#   - DESC       : Description                                         #
#   - ID         : ASYN ID                                             #
#=====================================================================


# ex: FBCK:FB02:GN01:S1DES_STORED
# This records purpose is to copy data from device data pvs, and push to ASYN PV
record(ao, "LHDL:LR20:270:TACT_STORED") { 
    field(DESC, "Laser Heater 2 Delay")
    field(PINI, "YES")
    field(EGU, "ps")
    field(PREC, "3")
    field(DTYP, "asynFloat64")
	field(OMSL, "closed_loop") 
    field(DOL, "LHDL:LR20:270:TACT_TEST CPP")  # TODO: Temporarily set as test
    field(OUT, "@asyn(GUARDIAN, 29, 0)STORED") 
    # info(autosaveFields, "VAL PREC DESC EGU HOPR LOPR SEVR HIHI HIGH LOW LOLO HHSV HSV LSV LLSV")
}

# ex: FBCK:FB02:GN01:S1DES_STORED_RBV
record(ai, "LHDL:LR20:270:TACT_STORED_RBV") {
    field(DESC, "Laser Heater 2 Delay")    
    field(EGU, "ps")
    field(PREC, "3")
    field(DTYP, "asynFloat64")
    field(SCAN, "I/O Intr")
    field(INP, "@asyn(GUARDIAN, 29, 0)STORED")
    # info(autosaveFields, "VAL PREC DESC EGU HOPR LOPR SEVR HIHI HIGH LOW LOLO HHSV HSV LSV LLSV")
}

# ex: FBCK:FB02:GN01:S1DES_SNAPSHOT
record(ai, "LHDL:LR20:270:TACT_SNAPSHOT") {
    field(DESC, "Laser Heater 2 Delay")
    field(SCAN, "I/O Intr")
    field(EGU, "ps")
    field(PREC, "3")
    field(DTYP, "asynFloat64")
    field(INP, "@asyn(GUARDIAN, 29, 0)SNAPSHOT")
    # info(autosaveFields, "VAL PREC DESC EGU HOPR LOPR SEVR HIHI HIGH LOW LOLO HHSV HSV LSV LLSV")
}
#=================================================================#
# Template file: guardian_device_data.template
# Database for device data values within sxrss for the guardian
# And for snapshot data values
# Uses guardian_device_data.substitutions
# Macro description:                                                   #
#   - NAME       : Name                                                #
#   - DESC       : Description                                         #
#   - ID         : ASYN ID                                             #
#=====================================================================


# ex: FBCK:FB02:GN01:S1DES_STORED
# This records purpose is to copy data from device data pvs, and push to ASYN PV
record(ao, "LASR:IN20:475:PWR1H_STORED") { 
    field(DESC, "Laser Heater Power")
    field(PINI, "YES")
    field(EGU, "uJ")
    field(PREC, "3")
    field(DTYP, "asynFloat64")
	field(OMSL, "closed_loop") 
    field(DOL, "LASR:IN20:475:PWR1H_TEST CPP")  # TODO: Temporarily set as test
    field(OUT, "@asyn(GUARDIAN, 30, 0)STORED") 
    # info(autosaveFields, "VAL PREC DESC EGU HOPR LOPR SEVR HIHI HIGH LOW LOLO HHSV HSV LSV LLSV")
}

# ex: FBCK:FB02:GN01:S1DES_STORED_RBV
record(ai, "LASR:IN20:475:PWR1H_STORED_RBV") {
    field(DESC, "Laser Heater Power")    
    field(EGU, "uJ")
    field(PREC, "3")
    field(DTYP, "asynFloat64")
    field(SCAN, "I/O Intr")
    field(INP, "@asyn(GUARDIAN, 30, 0)STORED")
    # info(autosaveFields, "VAL PREC DESC EGU HOPR LOPR SEVR HIHI HIGH LOW LOLO HHSV HSV LSV LLSV")
}

# ex: FBCK:FB02:GN01:S1DES_SNAPSHOT
record(ai, "LASR:IN20:475:PWR1H_SNAPSHOT") {
    field(DESC, "Laser Heater Power")
    field(SCAN, "I/O Intr")
    field(EGU, "uJ")
    field(PREC, "3")
    field(DTYP, "asynFloat64")
    field(INP, "@asyn(GUARDIAN, 30, 0)SNAPSHOT")
    # info(autosaveFields, "VAL PREC DESC EGU HOPR LOPR SEVR HIHI HIGH LOW LOLO HHSV HSV LSV LLSV")
}
#=================================================================#
# Template file: guardian_device_data.template
# Database for device data values within sxrss for the guardian
# And for snapshot data values
# Uses guardian_device_data.substitutions
# Macro description:                                                   #
#   - NAME       : Name                                                #
#   - DESC       : Description                                         #
#   - ID         : ASYN ID                                             #
#=====================================================================


# ex: FBCK:FB02:GN01:S1DES_STORED
# This records purpose is to copy data from device data pvs, and push to ASYN PV
record(ao, "USEG:UNDS:2650:KAct_STORED") { 
    field(DESC, "Undulator 1 K value")
    field(PINI, "YES")
    field(EGU, "K")
    field(PREC, "4")
    field(DTYP, "asynFloat64")
	field(OMSL, "closed_loop") 
    field(DOL, "USEG:UNDS:2650:KAct_TEST CPP")  # TODO: Temporarily set as test
    field(OUT, "@asyn(GUARDIAN, 31, 0)STORED") 
    # info(autosaveFields, "VAL PREC DESC EGU HOPR LOPR SEVR HIHI HIGH LOW LOLO HHSV HSV LSV LLSV")
}

# ex: FBCK:FB02:GN01:S1DES_STORED_RBV
record(ai, "USEG:UNDS:2650:KAct_STORED_RBV") {
    field(DESC, "Undulator 1 K value")    
    field(EGU, "K")
    field(PREC, "4")
    field(DTYP, "asynFloat64")
    field(SCAN, "I/O Intr")
    field(INP, "@asyn(GUARDIAN, 31, 0)STORED")
    # info(autosaveFields, "VAL PREC DESC EGU HOPR LOPR SEVR HIHI HIGH LOW LOLO HHSV HSV LSV LLSV")
}

# ex: FBCK:FB02:GN01:S1DES_SNAPSHOT
record(ai, "USEG:UNDS:2650:KAct_SNAPSHOT") {
    field(DESC, "Undulator 1 K value")
    field(SCAN, "I/O Intr")
    field(EGU, "K")
    field(PREC, "4")
    field(DTYP, "asynFloat64")
    field(INP, "@asyn(GUARDIAN, 31, 0)SNAPSHOT")
    # info(autosaveFields, "VAL PREC DESC EGU HOPR LOPR SEVR HIHI HIGH LOW LOLO HHSV HSV LSV LLSV")
}
#=================================================================#
# Template file: guardian_device_data.template
# Database for device data values within sxrss for the guardian
# And for snapshot data values
# Uses guardian_device_data.substitutions
# Macro description:                                                   #
#   - NAME       : Name                                                #
#   - DESC       : Description                                         #
#   - ID         : ASYN ID                                             #
#=====================================================================


# ex: FBCK:FB02:GN01:S1DES_STORED
# This records purpose is to copy data from device data pvs, and push to ASYN PV
record(ao, "USEG:UNDS:2750:KAct_STORED") { 
    field(DESC, "Undulator 2 K value")
    field(PINI, "YES")
    field(EGU, "K")
    field(PREC, "4")
    field(DTYP, "asynFloat64")
	field(OMSL, "closed_loop") 
    field(DOL, "USEG:UNDS:2750:KAct_TEST CPP")  # TODO: Temporarily set as test
    field(OUT, "@asyn(GUARDIAN, 32, 0)STORED") 
    # info(autosaveFields, "VAL PREC DESC EGU HOPR LOPR SEVR HIHI HIGH LOW LOLO HHSV HSV LSV LLSV")
}

# ex: FBCK:FB02:GN01:S1DES_STORED_RBV
record(ai, "USEG:UNDS:2750:KAct_STORED_RBV") {
    field(DESC, "Undulator 2 K value")    
    field(EGU, "K")
    field(PREC, "4")
    field(DTYP, "asynFloat64")
    field(SCAN, "I/O Intr")
    field(INP, "@asyn(GUARDIAN, 32, 0)STORED")
    # info(autosaveFields, "VAL PREC DESC EGU HOPR LOPR SEVR HIHI HIGH LOW LOLO HHSV HSV LSV LLSV")
}

# ex: FBCK:FB02:GN01:S1DES_SNAPSHOT
record(ai, "USEG:UNDS:2750:KAct_SNAPSHOT") {
    field(DESC, "Undulator 2 K value")
    field(SCAN, "I/O Intr")
    field(EGU, "K")
    field(PREC, "4")
    field(DTYP, "asynFloat64")
    field(INP, "@asyn(GUARDIAN, 32, 0)SNAPSHOT")
    # info(autosaveFields, "VAL PREC DESC EGU HOPR LOPR SEVR HIHI HIGH LOW LOLO HHSV HSV LSV LLSV")
}
#=================================================================#
# Template file: guardian_device_data.template
# Database for device data values within sxrss for the guardian
# And for snapshot data values
# Uses guardian_device_data.substitutions
# Macro description:                                                   #
#   - NAME       : Name                                                #
#   - DESC       : Description                                         #
#   - ID         : ASYN ID                                             #
#=====================================================================


# ex: FBCK:FB02:GN01:S1DES_STORED
# This records purpose is to copy data from device data pvs, and push to ASYN PV
record(ao, "USEG:UNDS:2850:KAct_STORED") { 
    field(DESC, "Undulator 3 K value")
    field(PINI, "YES")
    field(EGU, "K")
    field(PREC, "4")
    field(DTYP, "asynFloat64")
	field(OMSL, "closed_loop") 
    field(DOL, "USEG:UNDS:2850:KAct_TEST CPP")  # TODO: Temporarily set as test
    field(OUT, "@asyn(GUARDIAN, 33, 0)STORED") 
    # info(autosaveFields, "VAL PREC DESC EGU HOPR LOPR SEVR HIHI HIGH LOW LOLO HHSV HSV LSV LLSV")
}

# ex: FBCK:FB02:GN01:S1DES_STORED_RBV
record(ai, "USEG:UNDS:2850:KAct_STORED_RBV") {
    field(DESC, "Undulator 3 K value")    
    field(EGU, "K")
    field(PREC, "4")
    field(DTYP, "asynFloat64")
    field(SCAN, "I/O Intr")
    field(INP, "@asyn(GUARDIAN, 33, 0)STORED")
    # info(autosaveFields, "VAL PREC DESC EGU HOPR LOPR SEVR HIHI HIGH LOW LOLO HHSV HSV LSV LLSV")
}

# ex: FBCK:FB02:GN01:S1DES_SNAPSHOT
record(ai, "USEG:UNDS:2850:KAct_SNAPSHOT") {
    field(DESC, "Undulator 3 K value")
    field(SCAN, "I/O Intr")
    field(EGU, "K")
    field(PREC, "4")
    field(DTYP, "asynFloat64")
    field(INP, "@asyn(GUARDIAN, 33, 0)SNAPSHOT")
    # info(autosaveFields, "VAL PREC DESC EGU HOPR LOPR SEVR HIHI HIGH LOW LOLO HHSV HSV LSV LLSV")
}
#=================================================================#
# Template file: guardian_device_data.template
# Database for device data values within sxrss for the guardian
# And for snapshot data values
# Uses guardian_device_data.substitutions
# Macro description:                                                   #
#   - NAME       : Name                                                #
#   - DESC       : Description                                         #
#   - ID         : ASYN ID                                             #
#=====================================================================


# ex: FBCK:FB02:GN01:S1DES_STORED
# This records purpose is to copy data from device data pvs, and push to ASYN PV
record(ao, "USEG:UNDS:2950:KAct_STORED") { 
    field(DESC, "Undulator 4 K value")
    field(PINI, "YES")
    field(EGU, "K")
    field(PREC, "4")
    field(DTYP, "asynFloat64")
	field(OMSL, "closed_loop") 
    field(DOL, "USEG:UNDS:2950:KAct_TEST CPP")  # TODO: Temporarily set as test
    field(OUT, "@asyn(GUARDIAN, 34, 0)STORED") 
    # info(autosaveFields, "VAL PREC DESC EGU HOPR LOPR SEVR HIHI HIGH LOW LOLO HHSV HSV LSV LLSV")
}

# ex: FBCK:FB02:GN01:S1DES_STORED_RBV
record(ai, "USEG:UNDS:2950:KAct_STORED_RBV") {
    field(DESC, "Undulator 4 K value")    
    field(EGU, "K")
    field(PREC, "4")
    field(DTYP, "asynFloat64")
    field(SCAN, "I/O Intr")
    field(INP, "@asyn(GUARDIAN, 34, 0)STORED")
    # info(autosaveFields, "VAL PREC DESC EGU HOPR LOPR SEVR HIHI HIGH LOW LOLO HHSV HSV LSV LLSV")
}

# ex: FBCK:FB02:GN01:S1DES_SNAPSHOT
record(ai, "USEG:UNDS:2950:KAct_SNAPSHOT") {
    field(DESC, "Undulator 4 K value")
    field(SCAN, "I/O Intr")
    field(EGU, "K")
    field(PREC, "4")
    field(DTYP, "asynFloat64")
    field(INP, "@asyn(GUARDIAN, 34, 0)SNAPSHOT")
    # info(autosaveFields, "VAL PREC DESC EGU HOPR LOPR SEVR HIHI HIGH LOW LOLO HHSV HSV LSV LLSV")
}
#=================================================================#
# Template file: guardian_device_data.template
# Database for device data values within sxrss for the guardian
# And for snapshot data values
# Uses guardian_device_data.substitutions
# Macro description:                                                   #
#   - NAME       : Name                                                #
#   - DESC       : Description                                         #
#   - ID         : ASYN ID                                             #
#=====================================================================


# ex: FBCK:FB02:GN01:S1DES_STORED
# This records purpose is to copy data from device data pvs, and push to ASYN PV
record(ao, "USEG:UNDS:3050:KAct_STORED") { 
    field(DESC, "Undulator 5 K value")
    field(PINI, "YES")
    field(EGU, "K")
    field(PREC, "4")
    field(DTYP, "asynFloat64")
	field(OMSL, "closed_loop") 
    field(DOL, "USEG:UNDS:3050:KAct_TEST CPP")  # TODO: Temporarily set as test
    field(OUT, "@asyn(GUARDIAN, 35, 0)STORED") 
    # info(autosaveFields, "VAL PREC DESC EGU HOPR LOPR SEVR HIHI HIGH LOW LOLO HHSV HSV LSV LLSV")
}

# ex: FBCK:FB02:GN01:S1DES_STORED_RBV
record(ai, "USEG:UNDS:3050:KAct_STORED_RBV") {
    field(DESC, "Undulator 5 K value")    
    field(EGU, "K")
    field(PREC, "4")
    field(DTYP, "asynFloat64")
    field(SCAN, "I/O Intr")
    field(INP, "@asyn(GUARDIAN, 35, 0)STORED")
    # info(autosaveFields, "VAL PREC DESC EGU HOPR LOPR SEVR HIHI HIGH LOW LOLO HHSV HSV LSV LLSV")
}

# ex: FBCK:FB02:GN01:S1DES_SNAPSHOT
record(ai, "USEG:UNDS:3050:KAct_SNAPSHOT") {
    field(DESC, "Undulator 5 K value")
    field(SCAN, "I/O Intr")
    field(EGU, "K")
    field(PREC, "4")
    field(DTYP, "asynFloat64")
    field(INP, "@asyn(GUARDIAN, 35, 0)SNAPSHOT")
    # info(autosaveFields, "VAL PREC DESC EGU HOPR LOPR SEVR HIHI HIGH LOW LOLO HHSV HSV LSV LLSV")
}
#=================================================================#
# Template file: guardian_device_data.template
# Database for device data values within sxrss for the guardian
# And for snapshot data values
# Uses guardian_device_data.substitutions
# Macro description:                                                   #
#   - NAME       : Name                                                #
#   - DESC       : Description                                         #
#   - ID         : ASYN ID                                             #
#=====================================================================


# ex: FBCK:FB02:GN01:S1DES_STORED
# This records purpose is to copy data from device data pvs, and push to ASYN PV
record(ao, "USEG:UNDS:3150:KAct_STORED") { 
    field(DESC, "Undulator 6 K value")
    field(PINI, "YES")
    field(EGU, "K")
    field(PREC, "4")
    field(DTYP, "asynFloat64")
	field(OMSL, "closed_loop") 
    field(DOL, "USEG:UNDS:3150:KAct_TEST CPP")  # TODO: Temporarily set as test
    field(OUT, "@asyn(GUARDIAN, 36, 0)STORED") 
    # info(autosaveFields, "VAL PREC DESC EGU HOPR LOPR SEVR HIHI HIGH LOW LOLO HHSV HSV LSV LLSV")
}

# ex: FBCK:FB02:GN01:S1DES_STORED_RBV
record(ai, "USEG:UNDS:3150:KAct_STORED_RBV") {
    field(DESC, "Undulator 6 K value")    
    field(EGU, "K")
    field(PREC, "4")
    field(DTYP, "asynFloat64")
    field(SCAN, "I/O Intr")
    field(INP, "@asyn(GUARDIAN, 36, 0)STORED")
    # info(autosaveFields, "VAL PREC DESC EGU HOPR LOPR SEVR HIHI HIGH LOW LOLO HHSV HSV LSV LLSV")
}

# ex: FBCK:FB02:GN01:S1DES_SNAPSHOT
record(ai, "USEG:UNDS:3150:KAct_SNAPSHOT") {
    field(DESC, "Undulator 6 K value")
    field(SCAN, "I/O Intr")
    field(EGU, "K")
    field(PREC, "4")
    field(DTYP, "asynFloat64")
    field(INP, "@asyn(GUARDIAN, 36, 0)SNAPSHOT")
    # info(autosaveFields, "VAL PREC DESC EGU HOPR LOPR SEVR HIHI HIGH LOW LOLO HHSV HSV LSV LLSV")
}
#=================================================================#
# Template file: guardian_device_data.template
# Database for device data values within sxrss for the guardian
# And for snapshot data values
# Uses guardian_device_data.substitutions
# Macro description:                                                   #
#   - NAME       : Name                                                #
#   - DESC       : Description                                         #
#   - ID         : ASYN ID                                             #
#=====================================================================


# ex: FBCK:FB02:GN01:S1DES_STORED
# This records purpose is to copy data from device data pvs, and push to ASYN PV
record(ao, "USEG:UNDS:3250:KAct_STORED") { 
    field(DESC, "Undulator 7 K value")
    field(PINI, "YES")
    field(EGU, "K")
    field(PREC, "4")
    field(DTYP, "asynFloat64")
	field(OMSL, "closed_loop") 
    field(DOL, "USEG:UNDS:3250:KAct_TEST CPP")  # TODO: Temporarily set as test
    field(OUT, "@asyn(GUARDIAN, 37, 0)STORED") 
    # info(autosaveFields, "VAL PREC DESC EGU HOPR LOPR SEVR HIHI HIGH LOW LOLO HHSV HSV LSV LLSV")
}

# ex: FBCK:FB02:GN01:S1DES_STORED_RBV
record(ai, "USEG:UNDS:3250:KAct_STORED_RBV") {
    field(DESC, "Undulator 7 K value")    
    field(EGU, "K")
    field(PREC, "4")
    field(DTYP, "asynFloat64")
    field(SCAN, "I/O Intr")
    field(INP, "@asyn(GUARDIAN, 37, 0)STORED")
    # info(autosaveFields, "VAL PREC DESC EGU HOPR LOPR SEVR HIHI HIGH LOW LOLO HHSV HSV LSV LLSV")
}

# ex: FBCK:FB02:GN01:S1DES_SNAPSHOT
record(ai, "USEG:UNDS:3250:KAct_SNAPSHOT") {
    field(DESC, "Undulator 7 K value")
    field(SCAN, "I/O Intr")
    field(EGU, "K")
    field(PREC, "4")
    field(DTYP, "asynFloat64")
    field(INP, "@asyn(GUARDIAN, 37, 0)SNAPSHOT")
    # info(autosaveFields, "VAL PREC DESC EGU HOPR LOPR SEVR HIHI HIGH LOW LOLO HHSV HSV LSV LLSV")
}
#=================================================================#
# Template file: guardian_device_data.template
# Database for device data values within sxrss for the guardian
# And for snapshot data values
# Uses guardian_device_data.substitutions
# Macro description:                                                   #
#   - NAME       : Name                                                #
#   - DESC       : Description                                         #
#   - ID         : ASYN ID                                             #
#=====================================================================


# ex: FBCK:FB02:GN01:S1DES_STORED
# This records purpose is to copy data from device data pvs, and push to ASYN PV
record(ao, "USEG:UNDS:3350:KAct_STORED") { 
    field(DESC, "Undulator 8 K value")
    field(PINI, "YES")
    field(EGU, "K")
    field(PREC, "4")
    field(DTYP, "asynFloat64")
	field(OMSL, "closed_loop") 
    field(DOL, "USEG:UNDS:3350:KAct_TEST CPP")  # TODO: Temporarily set as test
    field(OUT, "@asyn(GUARDIAN, 38, 0)STORED") 
    # info(autosaveFields, "VAL PREC DESC EGU HOPR LOPR SEVR HIHI HIGH LOW LOLO HHSV HSV LSV LLSV")
}

# ex: FBCK:FB02:GN01:S1DES_STORED_RBV
record(ai, "USEG:UNDS:3350:KAct_STORED_RBV") {
    field(DESC, "Undulator 8 K value")    
    field(EGU, "K")
    field(PREC, "4")
    field(DTYP, "asynFloat64")
    field(SCAN, "I/O Intr")
    field(INP, "@asyn(GUARDIAN, 38, 0)STORED")
    # info(autosaveFields, "VAL PREC DESC EGU HOPR LOPR SEVR HIHI HIGH LOW LOLO HHSV HSV LSV LLSV")
}

# ex: FBCK:FB02:GN01:S1DES_SNAPSHOT
record(ai, "USEG:UNDS:3350:KAct_SNAPSHOT") {
    field(DESC, "Undulator 8 K value")
    field(SCAN, "I/O Intr")
    field(EGU, "K")
    field(PREC, "4")
    field(DTYP, "asynFloat64")
    field(INP, "@asyn(GUARDIAN, 38, 0)SNAPSHOT")
    # info(autosaveFields, "VAL PREC DESC EGU HOPR LOPR SEVR HIHI HIGH LOW LOLO HHSV HSV LSV LLSV")
}
#=================================================================#
# Template file: guardian_device_data.template
# Database for device data values within sxrss for the guardian
# And for snapshot data values
# Uses guardian_device_data.substitutions
# Macro description:                                                   #
#   - NAME       : Name                                                #
#   - DESC       : Description                                         #
#   - ID         : ASYN ID                                             #
#=====================================================================


# ex: FBCK:FB02:GN01:S1DES_STORED
# This records purpose is to copy data from device data pvs, and push to ASYN PV
record(ao, "USEG:UNDS:3450:KAct_STORED") { 
    field(DESC, "Undulator 9 K value")
    field(PINI, "YES")
    field(EGU, "K")
    field(PREC, "4")
    field(DTYP, "asynFloat64")
	field(OMSL, "closed_loop") 
    field(DOL, "USEG:UNDS:3450:KAct_TEST CPP")  # TODO: Temporarily set as test
    field(OUT, "@asyn(GUARDIAN, 39, 0)STORED") 
    # info(autosaveFields, "VAL PREC DESC EGU HOPR LOPR SEVR HIHI HIGH LOW LOLO HHSV HSV LSV LLSV")
}

# ex: FBCK:FB02:GN01:S1DES_STORED_RBV
record(ai, "USEG:UNDS:3450:KAct_STORED_RBV") {
    field(DESC, "Undulator 9 K value")    
    field(EGU, "K")
    field(PREC, "4")
    field(DTYP, "asynFloat64")
    field(SCAN, "I/O Intr")
    field(INP, "@asyn(GUARDIAN, 39, 0)STORED")
    # info(autosaveFields, "VAL PREC DESC EGU HOPR LOPR SEVR HIHI HIGH LOW LOLO HHSV HSV LSV LLSV")
}

# ex: FBCK:FB02:GN01:S1DES_SNAPSHOT
record(ai, "USEG:UNDS:3450:KAct_SNAPSHOT") {
    field(DESC, "Undulator 9 K value")
    field(SCAN, "I/O Intr")
    field(EGU, "K")
    field(PREC, "4")
    field(DTYP, "asynFloat64")
    field(INP, "@asyn(GUARDIAN, 39, 0)SNAPSHOT")
    # info(autosaveFields, "VAL PREC DESC EGU HOPR LOPR SEVR HIHI HIGH LOW LOLO HHSV HSV LSV LLSV")
}
#=================================================================#
# Template file: guardian_device_data.template
# Database for device data values within sxrss for the guardian
# And for snapshot data values
# Uses guardian_device_data.substitutions
# Macro description:                                                   #
#   - NAME       : Name                                                #
#   - DESC       : Description                                         #
#   - ID         : ASYN ID                                             #
#=====================================================================


# ex: FBCK:FB02:GN01:S1DES_STORED
# This records purpose is to copy data from device data pvs, and push to ASYN PV
record(ao, "QUAD:LI21:201:BDES_STORED") { 
    field(DESC, "CQ or Matching Quad 1 BDES Value")
    field(PINI, "YES")
    field(EGU, "kG")
    field(PREC, "4")
    field(DTYP, "asynFloat64")
	field(OMSL, "closed_loop") 
    field(DOL, "QUAD:LI21:201:BDES_TEST CPP")  # TODO: Temporarily set as test
    field(OUT, "@asyn(GUARDIAN, 40, 0)STORED") 
    # info(autosaveFields, "VAL PREC DESC EGU HOPR LOPR SEVR HIHI HIGH LOW LOLO HHSV HSV LSV LLSV")
}

# ex: FBCK:FB02:GN01:S1DES_STORED_RBV
record(ai, "QUAD:LI21:201:BDES_STORED_RBV") {
    field(DESC, "CQ or Matching Quad 1 BDES Value")    
    field(EGU, "kG")
    field(PREC, "4")
    field(DTYP, "asynFloat64")
    field(SCAN, "I/O Intr")
    field(INP, "@asyn(GUARDIAN, 40, 0)STORED")
    # info(autosaveFields, "VAL PREC DESC EGU HOPR LOPR SEVR HIHI HIGH LOW LOLO HHSV HSV LSV LLSV")
}

# ex: FBCK:FB02:GN01:S1DES_SNAPSHOT
record(ai, "QUAD:LI21:201:BDES_SNAPSHOT") {
    field(DESC, "CQ or Matching Quad 1 BDES Value")
    field(SCAN, "I/O Intr")
    field(EGU, "kG")
    field(PREC, "4")
    field(DTYP, "asynFloat64")
    field(INP, "@asyn(GUARDIAN, 40, 0)SNAPSHOT")
    # info(autosaveFields, "VAL PREC DESC EGU HOPR LOPR SEVR HIHI HIGH LOW LOLO HHSV HSV LSV LLSV")
}
#=================================================================#
# Template file: guardian_device_data.template
# Database for device data values within sxrss for the guardian
# And for snapshot data values
# Uses guardian_device_data.substitutions
# Macro description:                                                   #
#   - NAME       : Name                                                #
#   - DESC       : Description                                         #
#   - ID         : ASYN ID                                             #
#=====================================================================


# ex: FBCK:FB02:GN01:S1DES_STORED
# This records purpose is to copy data from device data pvs, and push to ASYN PV
record(ao, "QUAD:LI21:211:BDES_STORED") { 
    field(DESC, "CQ or Matching Quad 2 BDES Value")
    field(PINI, "YES")
    field(EGU, "kG")
    field(PREC, "4")
    field(DTYP, "asynFloat64")
	field(OMSL, "closed_loop") 
    field(DOL, "QUAD:LI21:211:BDES_TEST CPP")  # TODO: Temporarily set as test
    field(OUT, "@asyn(GUARDIAN, 41, 0)STORED") 
    # info(autosaveFields, "VAL PREC DESC EGU HOPR LOPR SEVR HIHI HIGH LOW LOLO HHSV HSV LSV LLSV")
}

# ex: FBCK:FB02:GN01:S1DES_STORED_RBV
record(ai, "QUAD:LI21:211:BDES_STORED_RBV") {
    field(DESC, "CQ or Matching Quad 2 BDES Value")    
    field(EGU, "kG")
    field(PREC, "4")
    field(DTYP, "asynFloat64")
    field(SCAN, "I/O Intr")
    field(INP, "@asyn(GUARDIAN, 41, 0)STORED")
    # info(autosaveFields, "VAL PREC DESC EGU HOPR LOPR SEVR HIHI HIGH LOW LOLO HHSV HSV LSV LLSV")
}

# ex: FBCK:FB02:GN01:S1DES_SNAPSHOT
record(ai, "QUAD:LI21:211:BDES_SNAPSHOT") {
    field(DESC, "CQ or Matching Quad 2 BDES Value")
    field(SCAN, "I/O Intr")
    field(EGU, "kG")
    field(PREC, "4")
    field(DTYP, "asynFloat64")
    field(INP, "@asyn(GUARDIAN, 41, 0)SNAPSHOT")
    # info(autosaveFields, "VAL PREC DESC EGU HOPR LOPR SEVR HIHI HIGH LOW LOLO HHSV HSV LSV LLSV")
}
#=================================================================#
# Template file: guardian_device_data.template
# Database for device data values within sxrss for the guardian
# And for snapshot data values
# Uses guardian_device_data.substitutions
# Macro description:                                                   #
#   - NAME       : Name                                                #
#   - DESC       : Description                                         #
#   - ID         : ASYN ID                                             #
#=====================================================================


# ex: FBCK:FB02:GN01:S1DES_STORED
# This records purpose is to copy data from device data pvs, and push to ASYN PV
record(ao, "QUAD:LI21:271:BDES_STORED") { 
    field(DESC, "CQ or Matching Quad 3 BDES Value")
    field(PINI, "YES")
    field(EGU, "kG")
    field(PREC, "4")
    field(DTYP, "asynFloat64")
	field(OMSL, "closed_loop") 
    field(DOL, "QUAD:LI21:271:BDES_TEST CPP")  # TODO: Temporarily set as test
    field(OUT, "@asyn(GUARDIAN, 42, 0)STORED") 
    # info(autosaveFields, "VAL PREC DESC EGU HOPR LOPR SEVR HIHI HIGH LOW LOLO HHSV HSV LSV LLSV")
}

# ex: FBCK:FB02:GN01:S1DES_STORED_RBV
record(ai, "QUAD:LI21:271:BDES_STORED_RBV") {
    field(DESC, "CQ or Matching Quad 3 BDES Value")    
    field(EGU, "kG")
    field(PREC, "4")
    field(DTYP, "asynFloat64")
    field(SCAN, "I/O Intr")
    field(INP, "@asyn(GUARDIAN, 42, 0)STORED")
    # info(autosaveFields, "VAL PREC DESC EGU HOPR LOPR SEVR HIHI HIGH LOW LOLO HHSV HSV LSV LLSV")
}

# ex: FBCK:FB02:GN01:S1DES_SNAPSHOT
record(ai, "QUAD:LI21:271:BDES_SNAPSHOT") {
    field(DESC, "CQ or Matching Quad 3 BDES Value")
    field(SCAN, "I/O Intr")
    field(EGU, "kG")
    field(PREC, "4")
    field(DTYP, "asynFloat64")
    field(INP, "@asyn(GUARDIAN, 42, 0)SNAPSHOT")
    # info(autosaveFields, "VAL PREC DESC EGU HOPR LOPR SEVR HIHI HIGH LOW LOLO HHSV HSV LSV LLSV")
}
#=================================================================#
# Template file: guardian_device_data.template
# Database for device data values within sxrss for the guardian
# And for snapshot data values
# Uses guardian_device_data.substitutions
# Macro description:                                                   #
#   - NAME       : Name                                                #
#   - DESC       : Description                                         #
#   - ID         : ASYN ID                                             #
#=====================================================================


# ex: FBCK:FB02:GN01:S1DES_STORED
# This records purpose is to copy data from device data pvs, and push to ASYN PV
record(ao, "QUAD:LI21:278:BDES_STORED") { 
    field(DESC, "CQ or Matching Quad 4 BDES Value")
    field(PINI, "YES")
    field(EGU, "kG")
    field(PREC, "4")
    field(DTYP, "asynFloat64")
	field(OMSL, "closed_loop") 
    field(DOL, "QUAD:LI21:278:BDES_TEST CPP")  # TODO: Temporarily set as test
    field(OUT, "@asyn(GUARDIAN, 43, 0)STORED") 
    # info(autosaveFields, "VAL PREC DESC EGU HOPR LOPR SEVR HIHI HIGH LOW LOLO HHSV HSV LSV LLSV")
}

# ex: FBCK:FB02:GN01:S1DES_STORED_RBV
record(ai, "QUAD:LI21:278:BDES_STORED_RBV") {
    field(DESC, "CQ or Matching Quad 4 BDES Value")    
    field(EGU, "kG")
    field(PREC, "4")
    field(DTYP, "asynFloat64")
    field(SCAN, "I/O Intr")
    field(INP, "@asyn(GUARDIAN, 43, 0)STORED")
    # info(autosaveFields, "VAL PREC DESC EGU HOPR LOPR SEVR HIHI HIGH LOW LOLO HHSV HSV LSV LLSV")
}

# ex: FBCK:FB02:GN01:S1DES_SNAPSHOT
record(ai, "QUAD:LI21:278:BDES_SNAPSHOT") {
    field(DESC, "CQ or Matching Quad 4 BDES Value")
    field(SCAN, "I/O Intr")
    field(EGU, "kG")
    field(PREC, "4")
    field(DTYP, "asynFloat64")
    field(INP, "@asyn(GUARDIAN, 43, 0)SNAPSHOT")
    # info(autosaveFields, "VAL PREC DESC EGU HOPR LOPR SEVR HIHI HIGH LOW LOLO HHSV HSV LSV LLSV")
}
#=================================================================#
# Template file: guardian_device_data.template
# Database for device data values within sxrss for the guardian
# And for snapshot data values
# Uses guardian_device_data.substitutions
# Macro description:                                                   #
#   - NAME       : Name                                                #
#   - DESC       : Description                                         #
#   - ID         : ASYN ID                                             #
#=====================================================================


# ex: FBCK:FB02:GN01:S1DES_STORED
# This records purpose is to copy data from device data pvs, and push to ASYN PV
record(ao, "QUAD:LI24:740:BDES_STORED") { 
    field(DESC, "CQ or Matching Quad 5 BDES Value")
    field(PINI, "YES")
    field(EGU, "kG")
    field(PREC, "4")
    field(DTYP, "asynFloat64")
	field(OMSL, "closed_loop") 
    field(DOL, "QUAD:LI24:740:BDES_TEST CPP")  # TODO: Temporarily set as test
    field(OUT, "@asyn(GUARDIAN, 44, 0)STORED") 
    # info(autosaveFields, "VAL PREC DESC EGU HOPR LOPR SEVR HIHI HIGH LOW LOLO HHSV HSV LSV LLSV")
}

# ex: FBCK:FB02:GN01:S1DES_STORED_RBV
record(ai, "QUAD:LI24:740:BDES_STORED_RBV") {
    field(DESC, "CQ or Matching Quad 5 BDES Value")    
    field(EGU, "kG")
    field(PREC, "4")
    field(DTYP, "asynFloat64")
    field(SCAN, "I/O Intr")
    field(INP, "@asyn(GUARDIAN, 44, 0)STORED")
    # info(autosaveFields, "VAL PREC DESC EGU HOPR LOPR SEVR HIHI HIGH LOW LOLO HHSV HSV LSV LLSV")
}

# ex: FBCK:FB02:GN01:S1DES_SNAPSHOT
record(ai, "QUAD:LI24:740:BDES_SNAPSHOT") {
    field(DESC, "CQ or Matching Quad 5 BDES Value")
    field(SCAN, "I/O Intr")
    field(EGU, "kG")
    field(PREC, "4")
    field(DTYP, "asynFloat64")
    field(INP, "@asyn(GUARDIAN, 44, 0)SNAPSHOT")
    # info(autosaveFields, "VAL PREC DESC EGU HOPR LOPR SEVR HIHI HIGH LOW LOLO HHSV HSV LSV LLSV")
}
#=================================================================#
# Template file: guardian_device_data.template
# Database for device data values within sxrss for the guardian
# And for snapshot data values
# Uses guardian_device_data.substitutions
# Macro description:                                                   #
#   - NAME       : Name                                                #
#   - DESC       : Description                                         #
#   - ID         : ASYN ID                                             #
#=====================================================================


# ex: FBCK:FB02:GN01:S1DES_STORED
# This records purpose is to copy data from device data pvs, and push to ASYN PV
record(ao, "QUAD:LI24:860:BDES_STORED") { 
    field(DESC, "CQ or Matching Quad 6 BDES Value")
    field(PINI, "YES")
    field(EGU, "kG")
    field(PREC, "4")
    field(DTYP, "asynFloat64")
	field(OMSL, "closed_loop") 
    field(DOL, "QUAD:LI24:860:BDES_TEST CPP")  # TODO: Temporarily set as test
    field(OUT, "@asyn(GUARDIAN, 45, 0)STORED") 
    # info(autosaveFields, "VAL PREC DESC EGU HOPR LOPR SEVR HIHI HIGH LOW LOLO HHSV HSV LSV LLSV")
}

# ex: FBCK:FB02:GN01:S1DES_STORED_RBV
record(ai, "QUAD:LI24:860:BDES_STORED_RBV") {
    field(DESC, "CQ or Matching Quad 6 BDES Value")    
    field(EGU, "kG")
    field(PREC, "4")
    field(DTYP, "asynFloat64")
    field(SCAN, "I/O Intr")
    field(INP, "@asyn(GUARDIAN, 45, 0)STORED")
    # info(autosaveFields, "VAL PREC DESC EGU HOPR LOPR SEVR HIHI HIGH LOW LOLO HHSV HSV LSV LLSV")
}

# ex: FBCK:FB02:GN01:S1DES_SNAPSHOT
record(ai, "QUAD:LI24:860:BDES_SNAPSHOT") {
    field(DESC, "CQ or Matching Quad 6 BDES Value")
    field(SCAN, "I/O Intr")
    field(EGU, "kG")
    field(PREC, "4")
    field(DTYP, "asynFloat64")
    field(INP, "@asyn(GUARDIAN, 45, 0)SNAPSHOT")
    # info(autosaveFields, "VAL PREC DESC EGU HOPR LOPR SEVR HIHI HIGH LOW LOLO HHSV HSV LSV LLSV")
}
#=================================================================#
# Template file: guardian_device_data.template
# Database for device data values within sxrss for the guardian
# And for snapshot data values
# Uses guardian_device_data.substitutions
# Macro description:                                                   #
#   - NAME       : Name                                                #
#   - DESC       : Description                                         #
#   - ID         : ASYN ID                                             #
#=====================================================================


# ex: FBCK:FB02:GN01:S1DES_STORED
# This records purpose is to copy data from device data pvs, and push to ASYN PV
record(ao, "QUAD:LI26:201:BDES_STORED") { 
    field(DESC, "CQ or Matching Quad 7 BDES Value")
    field(PINI, "YES")
    field(EGU, "kG")
    field(PREC, "4")
    field(DTYP, "asynFloat64")
	field(OMSL, "closed_loop") 
    field(DOL, "QUAD:LI26:201:BDES_TEST CPP")  # TODO: Temporarily set as test
    field(OUT, "@asyn(GUARDIAN, 46, 0)STORED") 
    # info(autosaveFields, "VAL PREC DESC EGU HOPR LOPR SEVR HIHI HIGH LOW LOLO HHSV HSV LSV LLSV")
}

# ex: FBCK:FB02:GN01:S1DES_STORED_RBV
record(ai, "QUAD:LI26:201:BDES_STORED_RBV") {
    field(DESC, "CQ or Matching Quad 7 BDES Value")    
    field(EGU, "kG")
    field(PREC, "4")
    field(DTYP, "asynFloat64")
    field(SCAN, "I/O Intr")
    field(INP, "@asyn(GUARDIAN, 46, 0)STORED")
    # info(autosaveFields, "VAL PREC DESC EGU HOPR LOPR SEVR HIHI HIGH LOW LOLO HHSV HSV LSV LLSV")
}

# ex: FBCK:FB02:GN01:S1DES_SNAPSHOT
record(ai, "QUAD:LI26:201:BDES_SNAPSHOT") {
    field(DESC, "CQ or Matching Quad 7 BDES Value")
    field(SCAN, "I/O Intr")
    field(EGU, "kG")
    field(PREC, "4")
    field(DTYP, "asynFloat64")
    field(INP, "@asyn(GUARDIAN, 46, 0)SNAPSHOT")
    # info(autosaveFields, "VAL PREC DESC EGU HOPR LOPR SEVR HIHI HIGH LOW LOLO HHSV HSV LSV LLSV")
}
#=================================================================#
# Template file: guardian_device_data.template
# Database for device data values within sxrss for the guardian
# And for snapshot data values
# Uses guardian_device_data.substitutions
# Macro description:                                                   #
#   - NAME       : Name                                                #
#   - DESC       : Description                                         #
#   - ID         : ASYN ID                                             #
#=====================================================================


# ex: FBCK:FB02:GN01:S1DES_STORED
# This records purpose is to copy data from device data pvs, and push to ASYN PV
record(ao, "QUAD:LI26:301:BDES_STORED") { 
    field(DESC, "CQ or Matching Quad 8 BDES Value")
    field(PINI, "YES")
    field(EGU, "kG")
    field(PREC, "4")
    field(DTYP, "asynFloat64")
	field(OMSL, "closed_loop") 
    field(DOL, "QUAD:LI26:301:BDES_TEST CPP")  # TODO: Temporarily set as test
    field(OUT, "@asyn(GUARDIAN, 47, 0)STORED") 
    # info(autosaveFields, "VAL PREC DESC EGU HOPR LOPR SEVR HIHI HIGH LOW LOLO HHSV HSV LSV LLSV")
}

# ex: FBCK:FB02:GN01:S1DES_STORED_RBV
record(ai, "QUAD:LI26:301:BDES_STORED_RBV") {
    field(DESC, "CQ or Matching Quad 8 BDES Value")    
    field(EGU, "kG")
    field(PREC, "4")
    field(DTYP, "asynFloat64")
    field(SCAN, "I/O Intr")
    field(INP, "@asyn(GUARDIAN, 47, 0)STORED")
    # info(autosaveFields, "VAL PREC DESC EGU HOPR LOPR SEVR HIHI HIGH LOW LOLO HHSV HSV LSV LLSV")
}

# ex: FBCK:FB02:GN01:S1DES_SNAPSHOT
record(ai, "QUAD:LI26:301:BDES_SNAPSHOT") {
    field(DESC, "CQ or Matching Quad 8 BDES Value")
    field(SCAN, "I/O Intr")
    field(EGU, "kG")
    field(PREC, "4")
    field(DTYP, "asynFloat64")
    field(INP, "@asyn(GUARDIAN, 47, 0)SNAPSHOT")
    # info(autosaveFields, "VAL PREC DESC EGU HOPR LOPR SEVR HIHI HIGH LOW LOLO HHSV HSV LSV LLSV")
}
#=================================================================#
# Template file: guardian_device_data.template
# Database for device data values within sxrss for the guardian
# And for snapshot data values
# Uses guardian_device_data.substitutions
# Macro description:                                                   #
#   - NAME       : Name                                                #
#   - DESC       : Description                                         #
#   - ID         : ASYN ID                                             #
#=====================================================================


# ex: FBCK:FB02:GN01:S1DES_STORED
# This records purpose is to copy data from device data pvs, and push to ASYN PV
record(ao, "QUAD:LI26:401:BDES_STORED") { 
    field(DESC, "CQ or Matching Quad 9 BDES Value")
    field(PINI, "YES")
    field(EGU, "kG")
    field(PREC, "4")
    field(DTYP, "asynFloat64")
	field(OMSL, "closed_loop") 
    field(DOL, "QUAD:LI26:401:BDES_TEST CPP")  # TODO: Temporarily set as test
    field(OUT, "@asyn(GUARDIAN, 48, 0)STORED") 
    # info(autosaveFields, "VAL PREC DESC EGU HOPR LOPR SEVR HIHI HIGH LOW LOLO HHSV HSV LSV LLSV")
}

# ex: FBCK:FB02:GN01:S1DES_STORED_RBV
record(ai, "QUAD:LI26:401:BDES_STORED_RBV") {
    field(DESC, "CQ or Matching Quad 9 BDES Value")    
    field(EGU, "kG")
    field(PREC, "4")
    field(DTYP, "asynFloat64")
    field(SCAN, "I/O Intr")
    field(INP, "@asyn(GUARDIAN, 48, 0)STORED")
    # info(autosaveFields, "VAL PREC DESC EGU HOPR LOPR SEVR HIHI HIGH LOW LOLO HHSV HSV LSV LLSV")
}

# ex: FBCK:FB02:GN01:S1DES_SNAPSHOT
record(ai, "QUAD:LI26:401:BDES_SNAPSHOT") {
    field(DESC, "CQ or Matching Quad 9 BDES Value")
    field(SCAN, "I/O Intr")
    field(EGU, "kG")
    field(PREC, "4")
    field(DTYP, "asynFloat64")
    field(INP, "@asyn(GUARDIAN, 48, 0)SNAPSHOT")
    # info(autosaveFields, "VAL PREC DESC EGU HOPR LOPR SEVR HIHI HIGH LOW LOLO HHSV HSV LSV LLSV")
}
#=================================================================#
# Template file: guardian_device_data.template
# Database for device data values within sxrss for the guardian
# And for snapshot data values
# Uses guardian_device_data.substitutions
# Macro description:                                                   #
#   - NAME       : Name                                                #
#   - DESC       : Description                                         #
#   - ID         : ASYN ID                                             #
#=====================================================================


# ex: FBCK:FB02:GN01:S1DES_STORED
# This records purpose is to copy data from device data pvs, and push to ASYN PV
record(ao, "QUAD:LI26:501:BDES_STORED") { 
    field(DESC, "CQ or Matching Quad 10 BDES Value")
    field(PINI, "YES")
    field(EGU, "kG")
    field(PREC, "4")
    field(DTYP, "asynFloat64")
	field(OMSL, "closed_loop") 
    field(DOL, "QUAD:LI26:501:BDES_TEST CPP")  # TODO: Temporarily set as test
    field(OUT, "@asyn(GUARDIAN, 49, 0)STORED") 
    # info(autosaveFields, "VAL PREC DESC EGU HOPR LOPR SEVR HIHI HIGH LOW LOLO HHSV HSV LSV LLSV")
}

# ex: FBCK:FB02:GN01:S1DES_STORED_RBV
record(ai, "QUAD:LI26:501:BDES_STORED_RBV") {
    field(DESC, "CQ or Matching Quad 10 BDES Value")    
    field(EGU, "kG")
    field(PREC, "4")
    field(DTYP, "asynFloat64")
    field(SCAN, "I/O Intr")
    field(INP, "@asyn(GUARDIAN, 49, 0)STORED")
    # info(autosaveFields, "VAL PREC DESC EGU HOPR LOPR SEVR HIHI HIGH LOW LOLO HHSV HSV LSV LLSV")
}

# ex: FBCK:FB02:GN01:S1DES_SNAPSHOT
record(ai, "QUAD:LI26:501:BDES_SNAPSHOT") {
    field(DESC, "CQ or Matching Quad 10 BDES Value")
    field(SCAN, "I/O Intr")
    field(EGU, "kG")
    field(PREC, "4")
    field(DTYP, "asynFloat64")
    field(INP, "@asyn(GUARDIAN, 49, 0)SNAPSHOT")
    # info(autosaveFields, "VAL PREC DESC EGU HOPR LOPR SEVR HIHI HIGH LOW LOLO HHSV HSV LSV LLSV")
}
#=================================================================#
# Template file: guardian_device_data.template
# Database for device data values within sxrss for the guardian
# And for snapshot data values
# Uses guardian_device_data.substitutions
# Macro description:                                                   #
#   - NAME       : Name                                                #
#   - DESC       : Description                                         #
#   - ID         : ASYN ID                                             #
#=====================================================================


# ex: FBCK:FB02:GN01:S1DES_STORED
# This records purpose is to copy data from device data pvs, and push to ASYN PV
record(ao, "QUAD:LI26:601:BDES_STORED") { 
    field(DESC, "CQ or Matching Quad 11 BDES Value")
    field(PINI, "YES")
    field(EGU, "kG")
    field(PREC, "4")
    field(DTYP, "asynFloat64")
	field(OMSL, "closed_loop") 
    field(DOL, "QUAD:LI26:601:BDES_TEST CPP")  # TODO: Temporarily set as test
    field(OUT, "@asyn(GUARDIAN, 50, 0)STORED") 
    # info(autosaveFields, "VAL PREC DESC EGU HOPR LOPR SEVR HIHI HIGH LOW LOLO HHSV HSV LSV LLSV")
}

# ex: FBCK:FB02:GN01:S1DES_STORED_RBV
record(ai, "QUAD:LI26:601:BDES_STORED_RBV") {
    field(DESC, "CQ or Matching Quad 11 BDES Value")    
    field(EGU, "kG")
    field(PREC, "4")
    field(DTYP, "asynFloat64")
    field(SCAN, "I/O Intr")
    field(INP, "@asyn(GUARDIAN, 50, 0)STORED")
    # info(autosaveFields, "VAL PREC DESC EGU HOPR LOPR SEVR HIHI HIGH LOW LOLO HHSV HSV LSV LLSV")
}

# ex: FBCK:FB02:GN01:S1DES_SNAPSHOT
record(ai, "QUAD:LI26:601:BDES_SNAPSHOT") {
    field(DESC, "CQ or Matching Quad 11 BDES Value")
    field(SCAN, "I/O Intr")
    field(EGU, "kG")
    field(PREC, "4")
    field(DTYP, "asynFloat64")
    field(INP, "@asyn(GUARDIAN, 50, 0)SNAPSHOT")
    # info(autosaveFields, "VAL PREC DESC EGU HOPR LOPR SEVR HIHI HIGH LOW LOLO HHSV HSV LSV LLSV")
}
#=================================================================#
# Template file: guardian_device_data.template
# Database for device data values within sxrss for the guardian
# And for snapshot data values
# Uses guardian_device_data.substitutions
# Macro description:                                                   #
#   - NAME       : Name                                                #
#   - DESC       : Description                                         #
#   - ID         : ASYN ID                                             #
#=====================================================================


# ex: FBCK:FB02:GN01:S1DES_STORED
# This records purpose is to copy data from device data pvs, and push to ASYN PV
record(ao, "QUAD:LI26:701:BDES_STORED") { 
    field(DESC, "CQ or Matching Quad 12 BDES Value")
    field(PINI, "YES")
    field(EGU, "kG")
    field(PREC, "4")
    field(DTYP, "asynFloat64")
	field(OMSL, "closed_loop") 
    field(DOL, "QUAD:LI26:701:BDES_TEST CPP")  # TODO: Temporarily set as test
    field(OUT, "@asyn(GUARDIAN, 51, 0)STORED") 
    # info(autosaveFields, "VAL PREC DESC EGU HOPR LOPR SEVR HIHI HIGH LOW LOLO HHSV HSV LSV LLSV")
}

# ex: FBCK:FB02:GN01:S1DES_STORED_RBV
record(ai, "QUAD:LI26:701:BDES_STORED_RBV") {
    field(DESC, "CQ or Matching Quad 12 BDES Value")    
    field(EGU, "kG")
    field(PREC, "4")
    field(DTYP, "asynFloat64")
    field(SCAN, "I/O Intr")
    field(INP, "@asyn(GUARDIAN, 51, 0)STORED")
    # info(autosaveFields, "VAL PREC DESC EGU HOPR LOPR SEVR HIHI HIGH LOW LOLO HHSV HSV LSV LLSV")
}

# ex: FBCK:FB02:GN01:S1DES_SNAPSHOT
record(ai, "QUAD:LI26:701:BDES_SNAPSHOT") {
    field(DESC, "CQ or Matching Quad 12 BDES Value")
    field(SCAN, "I/O Intr")
    field(EGU, "kG")
    field(PREC, "4")
    field(DTYP, "asynFloat64")
    field(INP, "@asyn(GUARDIAN, 51, 0)SNAPSHOT")
    # info(autosaveFields, "VAL PREC DESC EGU HOPR LOPR SEVR HIHI HIGH LOW LOLO HHSV HSV LSV LLSV")
}
#=================================================================#
# Template file: guardian_device_data.template
# Database for device data values within sxrss for the guardian
# And for snapshot data values
# Uses guardian_device_data.substitutions
# Macro description:                                                   #
#   - NAME       : Name                                                #
#   - DESC       : Description                                         #
#   - ID         : ASYN ID                                             #
#=====================================================================


# ex: FBCK:FB02:GN01:S1DES_STORED
# This records purpose is to copy data from device data pvs, and push to ASYN PV
record(ao, "QUAD:LI26:801:BDES_STORED") { 
    field(DESC, "CQ or Matching Quad 13 BDES Value")
    field(PINI, "YES")
    field(EGU, "kG")
    field(PREC, "4")
    field(DTYP, "asynFloat64")
	field(OMSL, "closed_loop") 
    field(DOL, "QUAD:LI26:801:BDES_TEST CPP")  # TODO: Temporarily set as test
    field(OUT, "@asyn(GUARDIAN, 52, 0)STORED") 
    # info(autosaveFields, "VAL PREC DESC EGU HOPR LOPR SEVR HIHI HIGH LOW LOLO HHSV HSV LSV LLSV")
}

# ex: FBCK:FB02:GN01:S1DES_STORED_RBV
record(ai, "QUAD:LI26:801:BDES_STORED_RBV") {
    field(DESC, "CQ or Matching Quad 13 BDES Value")    
    field(EGU, "kG")
    field(PREC, "4")
    field(DTYP, "asynFloat64")
    field(SCAN, "I/O Intr")
    field(INP, "@asyn(GUARDIAN, 52, 0)STORED")
    # info(autosaveFields, "VAL PREC DESC EGU HOPR LOPR SEVR HIHI HIGH LOW LOLO HHSV HSV LSV LLSV")
}

# ex: FBCK:FB02:GN01:S1DES_SNAPSHOT
record(ai, "QUAD:LI26:801:BDES_SNAPSHOT") {
    field(DESC, "CQ or Matching Quad 13 BDES Value")
    field(SCAN, "I/O Intr")
    field(EGU, "kG")
    field(PREC, "4")
    field(DTYP, "asynFloat64")
    field(INP, "@asyn(GUARDIAN, 52, 0)SNAPSHOT")
    # info(autosaveFields, "VAL PREC DESC EGU HOPR LOPR SEVR HIHI HIGH LOW LOLO HHSV HSV LSV LLSV")
}
#=================================================================#
# Template file: guardian_device_data.template
# Database for device data values within sxrss for the guardian
# And for snapshot data values
# Uses guardian_device_data.substitutions
# Macro description:                                                   #
#   - NAME       : Name                                                #
#   - DESC       : Description                                         #
#   - ID         : ASYN ID                                             #
#=====================================================================


# ex: FBCK:FB02:GN01:S1DES_STORED
# This records purpose is to copy data from device data pvs, and push to ASYN PV
record(ao, "QUAD:LI26:901:BDES_STORED") { 
    field(DESC, "CQ or Matching Quad 14 BDES Value")
    field(PINI, "YES")
    field(EGU, "kG")
    field(PREC, "4")
    field(DTYP, "asynFloat64")
	field(OMSL, "closed_loop") 
    field(DOL, "QUAD:LI26:901:BDES_TEST CPP")  # TODO: Temporarily set as test
    field(OUT, "@asyn(GUARDIAN, 53, 0)STORED") 
    # info(autosaveFields, "VAL PREC DESC EGU HOPR LOPR SEVR HIHI HIGH LOW LOLO HHSV HSV LSV LLSV")
}

# ex: FBCK:FB02:GN01:S1DES_STORED_RBV
record(ai, "QUAD:LI26:901:BDES_STORED_RBV") {
    field(DESC, "CQ or Matching Quad 14 BDES Value")    
    field(EGU, "kG")
    field(PREC, "4")
    field(DTYP, "asynFloat64")
    field(SCAN, "I/O Intr")
    field(INP, "@asyn(GUARDIAN, 53, 0)STORED")
    # info(autosaveFields, "VAL PREC DESC EGU HOPR LOPR SEVR HIHI HIGH LOW LOLO HHSV HSV LSV LLSV")
}

# ex: FBCK:FB02:GN01:S1DES_SNAPSHOT
record(ai, "QUAD:LI26:901:BDES_SNAPSHOT") {
    field(DESC, "CQ or Matching Quad 14 BDES Value")
    field(SCAN, "I/O Intr")
    field(EGU, "kG")
    field(PREC, "4")
    field(DTYP, "asynFloat64")
    field(INP, "@asyn(GUARDIAN, 53, 0)SNAPSHOT")
    # info(autosaveFields, "VAL PREC DESC EGU HOPR LOPR SEVR HIHI HIGH LOW LOLO HHSV HSV LSV LLSV")
}
#=================================================================#
# Template file: guardian_device_data.template
# Database for device data values within sxrss for the guardian
# And for snapshot data values
# Uses guardian_device_data.substitutions
# Macro description:                                                   #
#   - NAME       : Name                                                #
#   - DESC       : Description                                         #
#   - ID         : ASYN ID                                             #
#=====================================================================


# ex: FBCK:FB02:GN01:S1DES_STORED
# This records purpose is to copy data from device data pvs, and push to ASYN PV
record(ao, "QUAD:CLTS:590:BDES_STORED") { 
    field(DESC, "CQ or Matching Quad 15 BDES Value")
    field(PINI, "YES")
    field(EGU, "kG")
    field(PREC, "4")
    field(DTYP, "asynFloat64")
	field(OMSL, "closed_loop") 
    field(DOL, "QUAD:CLTS:590:BDES_TEST CPP")  # TODO: Temporarily set as test
    field(OUT, "@asyn(GUARDIAN, 54, 0)STORED") 
    # info(autosaveFields, "VAL PREC DESC EGU HOPR LOPR SEVR HIHI HIGH LOW LOLO HHSV HSV LSV LLSV")
}

# ex: FBCK:FB02:GN01:S1DES_STORED_RBV
record(ai, "QUAD:CLTS:590:BDES_STORED_RBV") {
    field(DESC, "CQ or Matching Quad 15 BDES Value")    
    field(EGU, "kG")
    field(PREC, "4")
    field(DTYP, "asynFloat64")
    field(SCAN, "I/O Intr")
    field(INP, "@asyn(GUARDIAN, 54, 0)STORED")
    # info(autosaveFields, "VAL PREC DESC EGU HOPR LOPR SEVR HIHI HIGH LOW LOLO HHSV HSV LSV LLSV")
}

# ex: FBCK:FB02:GN01:S1DES_SNAPSHOT
record(ai, "QUAD:CLTS:590:BDES_SNAPSHOT") {
    field(DESC, "CQ or Matching Quad 15 BDES Value")
    field(SCAN, "I/O Intr")
    field(EGU, "kG")
    field(PREC, "4")
    field(DTYP, "asynFloat64")
    field(INP, "@asyn(GUARDIAN, 54, 0)SNAPSHOT")
    # info(autosaveFields, "VAL PREC DESC EGU HOPR LOPR SEVR HIHI HIGH LOW LOLO HHSV HSV LSV LLSV")
}
#=================================================================#
# Template file: guardian_device_data.template
# Database for device data values within sxrss for the guardian
# And for snapshot data values
# Uses guardian_device_data.substitutions
# Macro description:                                                   #
#   - NAME       : Name                                                #
#   - DESC       : Description                                         #
#   - ID         : ASYN ID                                             #
#=====================================================================


# ex: FBCK:FB02:GN01:S1DES_STORED
# This records purpose is to copy data from device data pvs, and push to ASYN PV
record(ao, "QUAD:CLTS:620:BDES_STORED") { 
    field(DESC, "CQ or Matching Quad 16 BDES Value")
    field(PINI, "YES")
    field(EGU, "kG")
    field(PREC, "4")
    field(DTYP, "asynFloat64")
	field(OMSL, "closed_loop") 
    field(DOL, "QUAD:CLTS:620:BDES_TEST CPP")  # TODO: Temporarily set as test
    field(OUT, "@asyn(GUARDIAN, 55, 0)STORED") 
    # info(autosaveFields, "VAL PREC DESC EGU HOPR LOPR SEVR HIHI HIGH LOW LOLO HHSV HSV LSV LLSV")
}

# ex: FBCK:FB02:GN01:S1DES_STORED_RBV
record(ai, "QUAD:CLTS:620:BDES_STORED_RBV") {
    field(DESC, "CQ or Matching Quad 16 BDES Value")    
    field(EGU, "kG")
    field(PREC, "4")
    field(DTYP, "asynFloat64")
    field(SCAN, "I/O Intr")
    field(INP, "@asyn(GUARDIAN, 55, 0)STORED")
    # info(autosaveFields, "VAL PREC DESC EGU HOPR LOPR SEVR HIHI HIGH LOW LOLO HHSV HSV LSV LLSV")
}

# ex: FBCK:FB02:GN01:S1DES_SNAPSHOT
record(ai, "QUAD:CLTS:620:BDES_SNAPSHOT") {
    field(DESC, "CQ or Matching Quad 16 BDES Value")
    field(SCAN, "I/O Intr")
    field(EGU, "kG")
    field(PREC, "4")
    field(DTYP, "asynFloat64")
    field(INP, "@asyn(GUARDIAN, 55, 0)SNAPSHOT")
    # info(autosaveFields, "VAL PREC DESC EGU HOPR LOPR SEVR HIHI HIGH LOW LOLO HHSV HSV LSV LLSV")
}
#=================================================================#
# Template file: guardian_device_data.template
# Database for device data values within sxrss for the guardian
# And for snapshot data values
# Uses guardian_device_data.substitutions
# Macro description:                                                   #
#   - NAME       : Name                                                #
#   - DESC       : Description                                         #
#   - ID         : ASYN ID                                             #
#=====================================================================


# ex: FBCK:FB02:GN01:S1DES_STORED
# This records purpose is to copy data from device data pvs, and push to ASYN PV
record(ao, "QUAD:LTUS:110:BDES_STORED") { 
    field(DESC, "CQ or Matching Quad 17 BDES Value")
    field(PINI, "YES")
    field(EGU, "kG")
    field(PREC, "4")
    field(DTYP, "asynFloat64")
	field(OMSL, "closed_loop") 
    field(DOL, "QUAD:LTUS:110:BDES_TEST CPP")  # TODO: Temporarily set as test
    field(OUT, "@asyn(GUARDIAN, 56, 0)STORED") 
    # info(autosaveFields, "VAL PREC DESC EGU HOPR LOPR SEVR HIHI HIGH LOW LOLO HHSV HSV LSV LLSV")
}

# ex: FBCK:FB02:GN01:S1DES_STORED_RBV
record(ai, "QUAD:LTUS:110:BDES_STORED_RBV") {
    field(DESC, "CQ or Matching Quad 17 BDES Value")    
    field(EGU, "kG")
    field(PREC, "4")
    field(DTYP, "asynFloat64")
    field(SCAN, "I/O Intr")
    field(INP, "@asyn(GUARDIAN, 56, 0)STORED")
    # info(autosaveFields, "VAL PREC DESC EGU HOPR LOPR SEVR HIHI HIGH LOW LOLO HHSV HSV LSV LLSV")
}

# ex: FBCK:FB02:GN01:S1DES_SNAPSHOT
record(ai, "QUAD:LTUS:110:BDES_SNAPSHOT") {
    field(DESC, "CQ or Matching Quad 17 BDES Value")
    field(SCAN, "I/O Intr")
    field(EGU, "kG")
    field(PREC, "4")
    field(DTYP, "asynFloat64")
    field(INP, "@asyn(GUARDIAN, 56, 0)SNAPSHOT")
    # info(autosaveFields, "VAL PREC DESC EGU HOPR LOPR SEVR HIHI HIGH LOW LOLO HHSV HSV LSV LLSV")
}
#=================================================================#
# Template file: guardian_device_data.template
# Database for device data values within sxrss for the guardian
# And for snapshot data values
# Uses guardian_device_data.substitutions
# Macro description:                                                   #
#   - NAME       : Name                                                #
#   - DESC       : Description                                         #
#   - ID         : ASYN ID                                             #
#=====================================================================


# ex: FBCK:FB02:GN01:S1DES_STORED
# This records purpose is to copy data from device data pvs, and push to ASYN PV
record(ao, "QUAD:LTUS:120:BDES_STORED") { 
    field(DESC, "CQ or Matching Quad 18 BDES Value")
    field(PINI, "YES")
    field(EGU, "kG")
    field(PREC, "4")
    field(DTYP, "asynFloat64")
	field(OMSL, "closed_loop") 
    field(DOL, "QUAD:LTUS:120:BDES_TEST CPP")  # TODO: Temporarily set as test
    field(OUT, "@asyn(GUARDIAN, 57, 0)STORED") 
    # info(autosaveFields, "VAL PREC DESC EGU HOPR LOPR SEVR HIHI HIGH LOW LOLO HHSV HSV LSV LLSV")
}

# ex: FBCK:FB02:GN01:S1DES_STORED_RBV
record(ai, "QUAD:LTUS:120:BDES_STORED_RBV") {
    field(DESC, "CQ or Matching Quad 18 BDES Value")    
    field(EGU, "kG")
    field(PREC, "4")
    field(DTYP, "asynFloat64")
    field(SCAN, "I/O Intr")
    field(INP, "@asyn(GUARDIAN, 57, 0)STORED")
    # info(autosaveFields, "VAL PREC DESC EGU HOPR LOPR SEVR HIHI HIGH LOW LOLO HHSV HSV LSV LLSV")
}

# ex: FBCK:FB02:GN01:S1DES_SNAPSHOT
record(ai, "QUAD:LTUS:120:BDES_SNAPSHOT") {
    field(DESC, "CQ or Matching Quad 18 BDES Value")
    field(SCAN, "I/O Intr")
    field(EGU, "kG")
    field(PREC, "4")
    field(DTYP, "asynFloat64")
    field(INP, "@asyn(GUARDIAN, 57, 0)SNAPSHOT")
    # info(autosaveFields, "VAL PREC DESC EGU HOPR LOPR SEVR HIHI HIGH LOW LOLO HHSV HSV LSV LLSV")
}
#=================================================================#
# Template file: guardian_device_data.template
# Database for device data values within sxrss for the guardian
# And for snapshot data values
# Uses guardian_device_data.substitutions
# Macro description:                                                   #
#   - NAME       : Name                                                #
#   - DESC       : Description                                         #
#   - ID         : ASYN ID                                             #
#=====================================================================


# ex: FBCK:FB02:GN01:S1DES_STORED
# This records purpose is to copy data from device data pvs, and push to ASYN PV
record(ao, "QUAD:LTUS:620:BDES_STORED") { 
    field(DESC, "CQ or Matching Quad 19 BDES Value")
    field(PINI, "YES")
    field(EGU, "kG")
    field(PREC, "4")
    field(DTYP, "asynFloat64")
	field(OMSL, "closed_loop") 
    field(DOL, "QUAD:LTUS:620:BDES_TEST CPP")  # TODO: Temporarily set as test
    field(OUT, "@asyn(GUARDIAN, 58, 0)STORED") 
    # info(autosaveFields, "VAL PREC DESC EGU HOPR LOPR SEVR HIHI HIGH LOW LOLO HHSV HSV LSV LLSV")
}

# ex: FBCK:FB02:GN01:S1DES_STORED_RBV
record(ai, "QUAD:LTUS:620:BDES_STORED_RBV") {
    field(DESC, "CQ or Matching Quad 19 BDES Value")    
    field(EGU, "kG")
    field(PREC, "4")
    field(DTYP, "asynFloat64")
    field(SCAN, "I/O Intr")
    field(INP, "@asyn(GUARDIAN, 58, 0)STORED")
    # info(autosaveFields, "VAL PREC DESC EGU HOPR LOPR SEVR HIHI HIGH LOW LOLO HHSV HSV LSV LLSV")
}

# ex: FBCK:FB02:GN01:S1DES_SNAPSHOT
record(ai, "QUAD:LTUS:620:BDES_SNAPSHOT") {
    field(DESC, "CQ or Matching Quad 19 BDES Value")
    field(SCAN, "I/O Intr")
    field(EGU, "kG")
    field(PREC, "4")
    field(DTYP, "asynFloat64")
    field(INP, "@asyn(GUARDIAN, 58, 0)SNAPSHOT")
    # info(autosaveFields, "VAL PREC DESC EGU HOPR LOPR SEVR HIHI HIGH LOW LOLO HHSV HSV LSV LLSV")
}
#=================================================================#
# Template file: guardian_device_data.template
# Database for device data values within sxrss for the guardian
# And for snapshot data values
# Uses guardian_device_data.substitutions
# Macro description:                                                   #
#   - NAME       : Name                                                #
#   - DESC       : Description                                         #
#   - ID         : ASYN ID                                             #
#=====================================================================


# ex: FBCK:FB02:GN01:S1DES_STORED
# This records purpose is to copy data from device data pvs, and push to ASYN PV
record(ao, "QUAD:LTUS:640:BDES_STORED") { 
    field(DESC, "CQ or Matching Quad 20 BDES Value")
    field(PINI, "YES")
    field(EGU, "kG")
    field(PREC, "4")
    field(DTYP, "asynFloat64")
	field(OMSL, "closed_loop") 
    field(DOL, "QUAD:LTUS:640:BDES_TEST CPP")  # TODO: Temporarily set as test
    field(OUT, "@asyn(GUARDIAN, 59, 0)STORED") 
    # info(autosaveFields, "VAL PREC DESC EGU HOPR LOPR SEVR HIHI HIGH LOW LOLO HHSV HSV LSV LLSV")
}

# ex: FBCK:FB02:GN01:S1DES_STORED_RBV
record(ai, "QUAD:LTUS:640:BDES_STORED_RBV") {
    field(DESC, "CQ or Matching Quad 20 BDES Value")    
    field(EGU, "kG")
    field(PREC, "4")
    field(DTYP, "asynFloat64")
    field(SCAN, "I/O Intr")
    field(INP, "@asyn(GUARDIAN, 59, 0)STORED")
    # info(autosaveFields, "VAL PREC DESC EGU HOPR LOPR SEVR HIHI HIGH LOW LOLO HHSV HSV LSV LLSV")
}

# ex: FBCK:FB02:GN01:S1DES_SNAPSHOT
record(ai, "QUAD:LTUS:640:BDES_SNAPSHOT") {
    field(DESC, "CQ or Matching Quad 20 BDES Value")
    field(SCAN, "I/O Intr")
    field(EGU, "kG")
    field(PREC, "4")
    field(DTYP, "asynFloat64")
    field(INP, "@asyn(GUARDIAN, 59, 0)SNAPSHOT")
    # info(autosaveFields, "VAL PREC DESC EGU HOPR LOPR SEVR HIHI HIGH LOW LOLO HHSV HSV LSV LLSV")
}
#=================================================================#
# Template file: guardian_device_data.template
# Database for device data values within sxrss for the guardian
# And for snapshot data values
# Uses guardian_device_data.substitutions
# Macro description:                                                   #
#   - NAME       : Name                                                #
#   - DESC       : Description                                         #
#   - ID         : ASYN ID                                             #
#=====================================================================


# ex: FBCK:FB02:GN01:S1DES_STORED
# This records purpose is to copy data from device data pvs, and push to ASYN PV
record(ao, "QUAD:LTUS:660:BDES_STORED") { 
    field(DESC, "CQ or Matching Quad 21 BDES Value")
    field(PINI, "YES")
    field(EGU, "kG")
    field(PREC, "4")
    field(DTYP, "asynFloat64")
	field(OMSL, "closed_loop") 
    field(DOL, "QUAD:LTUS:660:BDES_TEST CPP")  # TODO: Temporarily set as test
    field(OUT, "@asyn(GUARDIAN, 60, 0)STORED") 
    # info(autosaveFields, "VAL PREC DESC EGU HOPR LOPR SEVR HIHI HIGH LOW LOLO HHSV HSV LSV LLSV")
}

# ex: FBCK:FB02:GN01:S1DES_STORED_RBV
record(ai, "QUAD:LTUS:660:BDES_STORED_RBV") {
    field(DESC, "CQ or Matching Quad 21 BDES Value")    
    field(EGU, "kG")
    field(PREC, "4")
    field(DTYP, "asynFloat64")
    field(SCAN, "I/O Intr")
    field(INP, "@asyn(GUARDIAN, 60, 0)STORED")
    # info(autosaveFields, "VAL PREC DESC EGU HOPR LOPR SEVR HIHI HIGH LOW LOLO HHSV HSV LSV LLSV")
}

# ex: FBCK:FB02:GN01:S1DES_SNAPSHOT
record(ai, "QUAD:LTUS:660:BDES_SNAPSHOT") {
    field(DESC, "CQ or Matching Quad 21 BDES Value")
    field(SCAN, "I/O Intr")
    field(EGU, "kG")
    field(PREC, "4")
    field(DTYP, "asynFloat64")
    field(INP, "@asyn(GUARDIAN, 60, 0)SNAPSHOT")
    # info(autosaveFields, "VAL PREC DESC EGU HOPR LOPR SEVR HIHI HIGH LOW LOLO HHSV HSV LSV LLSV")
}
#=================================================================#
# Template file: guardian_device_data.template
# Database for device data values within sxrss for the guardian
# And for snapshot data values
# Uses guardian_device_data.substitutions
# Macro description:                                                   #
#   - NAME       : Name                                                #
#   - DESC       : Description                                         #
#   - ID         : ASYN ID                                             #
#=====================================================================


# ex: FBCK:FB02:GN01:S1DES_STORED
# This records purpose is to copy data from device data pvs, and push to ASYN PV
record(ao, "QUAD:LTUS:680:BDES_STORED") { 
    field(DESC, "CQ or Matching Quad 22 BDES Value")
    field(PINI, "YES")
    field(EGU, "kG")
    field(PREC, "4")
    field(DTYP, "asynFloat64")
	field(OMSL, "closed_loop") 
    field(DOL, "QUAD:LTUS:680:BDES_TEST CPP")  # TODO: Temporarily set as test
    field(OUT, "@asyn(GUARDIAN, 61, 0)STORED") 
    # info(autosaveFields, "VAL PREC DESC EGU HOPR LOPR SEVR HIHI HIGH LOW LOLO HHSV HSV LSV LLSV")
}

# ex: FBCK:FB02:GN01:S1DES_STORED_RBV
record(ai, "QUAD:LTUS:680:BDES_STORED_RBV") {
    field(DESC, "CQ or Matching Quad 22 BDES Value")    
    field(EGU, "kG")
    field(PREC, "4")
    field(DTYP, "asynFloat64")
    field(SCAN, "I/O Intr")
    field(INP, "@asyn(GUARDIAN, 61, 0)STORED")
    # info(autosaveFields, "VAL PREC DESC EGU HOPR LOPR SEVR HIHI HIGH LOW LOLO HHSV HSV LSV LLSV")
}

# ex: FBCK:FB02:GN01:S1DES_SNAPSHOT
record(ai, "QUAD:LTUS:680:BDES_SNAPSHOT") {
    field(DESC, "CQ or Matching Quad 22 BDES Value")
    field(SCAN, "I/O Intr")
    field(EGU, "kG")
    field(PREC, "4")
    field(DTYP, "asynFloat64")
    field(INP, "@asyn(GUARDIAN, 61, 0)SNAPSHOT")
    # info(autosaveFields, "VAL PREC DESC EGU HOPR LOPR SEVR HIHI HIGH LOW LOLO HHSV HSV LSV LLSV")
}
#=================================================================#
# Template file: guardian_device_data.template
# Database for device data values within sxrss for the guardian
# And for snapshot data values
# Uses guardian_device_data.substitutions
# Macro description:                                                   #
#   - NAME       : Name                                                #
#   - DESC       : Description                                         #
#   - ID         : ASYN ID                                             #
#=====================================================================


# ex: FBCK:FB02:GN01:S1DES_STORED
# This records purpose is to copy data from device data pvs, and push to ASYN PV
record(ao, "QUAD:LTUS:820:BDES_STORED") { 
    field(DESC, "CQ or Matching Quad 23 BDES Value")
    field(PINI, "YES")
    field(EGU, "kG")
    field(PREC, "4")
    field(DTYP, "asynFloat64")
	field(OMSL, "closed_loop") 
    field(DOL, "QUAD:LTUS:820:BDES_TEST CPP")  # TODO: Temporarily set as test
    field(OUT, "@asyn(GUARDIAN, 62, 0)STORED") 
    # info(autosaveFields, "VAL PREC DESC EGU HOPR LOPR SEVR HIHI HIGH LOW LOLO HHSV HSV LSV LLSV")
}

# ex: FBCK:FB02:GN01:S1DES_STORED_RBV
record(ai, "QUAD:LTUS:820:BDES_STORED_RBV") {
    field(DESC, "CQ or Matching Quad 23 BDES Value")    
    field(EGU, "kG")
    field(PREC, "4")
    field(DTYP, "asynFloat64")
    field(SCAN, "I/O Intr")
    field(INP, "@asyn(GUARDIAN, 62, 0)STORED")
    # info(autosaveFields, "VAL PREC DESC EGU HOPR LOPR SEVR HIHI HIGH LOW LOLO HHSV HSV LSV LLSV")
}

# ex: FBCK:FB02:GN01:S1DES_SNAPSHOT
record(ai, "QUAD:LTUS:820:BDES_SNAPSHOT") {
    field(DESC, "CQ or Matching Quad 23 BDES Value")
    field(SCAN, "I/O Intr")
    field(EGU, "kG")
    field(PREC, "4")
    field(DTYP, "asynFloat64")
    field(INP, "@asyn(GUARDIAN, 62, 0)SNAPSHOT")
    # info(autosaveFields, "VAL PREC DESC EGU HOPR LOPR SEVR HIHI HIGH LOW LOLO HHSV HSV LSV LLSV")
}
#=================================================================#
# Template file: guardian_device_data.template
# Database for device data values within sxrss for the guardian
# And for snapshot data values
# Uses guardian_device_data.substitutions
# Macro description:                                                   #
#   - NAME       : Name                                                #
#   - DESC       : Description                                         #
#   - ID         : ASYN ID                                             #
#=====================================================================


# ex: FBCK:FB02:GN01:S1DES_STORED
# This records purpose is to copy data from device data pvs, and push to ASYN PV
record(ao, "QUAD:LTUS:840:BDES_STORED") { 
    field(DESC, "CQ or Matching Quad 24 BDES Value")
    field(PINI, "YES")
    field(EGU, "kG")
    field(PREC, "4")
    field(DTYP, "asynFloat64")
	field(OMSL, "closed_loop") 
    field(DOL, "QUAD:LTUS:840:BDES_TEST CPP")  # TODO: Temporarily set as test
    field(OUT, "@asyn(GUARDIAN, 63, 0)STORED") 
    # info(autosaveFields, "VAL PREC DESC EGU HOPR LOPR SEVR HIHI HIGH LOW LOLO HHSV HSV LSV LLSV")
}

# ex: FBCK:FB02:GN01:S1DES_STORED_RBV
record(ai, "QUAD:LTUS:840:BDES_STORED_RBV") {
    field(DESC, "CQ or Matching Quad 24 BDES Value")    
    field(EGU, "kG")
    field(PREC, "4")
    field(DTYP, "asynFloat64")
    field(SCAN, "I/O Intr")
    field(INP, "@asyn(GUARDIAN, 63, 0)STORED")
    # info(autosaveFields, "VAL PREC DESC EGU HOPR LOPR SEVR HIHI HIGH LOW LOLO HHSV HSV LSV LLSV")
}

# ex: FBCK:FB02:GN01:S1DES_SNAPSHOT
record(ai, "QUAD:LTUS:840:BDES_SNAPSHOT") {
    field(DESC, "CQ or Matching Quad 24 BDES Value")
    field(SCAN, "I/O Intr")
    field(EGU, "kG")
    field(PREC, "4")
    field(DTYP, "asynFloat64")
    field(INP, "@asyn(GUARDIAN, 63, 0)SNAPSHOT")
    # info(autosaveFields, "VAL PREC DESC EGU HOPR LOPR SEVR HIHI HIGH LOW LOLO HHSV HSV LSV LLSV")
}
#=================================================================#
# Template file: guardian_device_data.template
# Database for device data values within sxrss for the guardian
# And for snapshot data values
# Uses guardian_device_data.substitutions
# Macro description:                                                   #
#   - NAME       : Name                                                #
#   - DESC       : Description                                         #
#   - ID         : ASYN ID                                             #
#=====================================================================


# ex: FBCK:FB02:GN01:S1DES_STORED
# This records purpose is to copy data from device data pvs, and push to ASYN PV
record(ao, "QUAD:LTUS:860:BDES_STORED") { 
    field(DESC, "CQ or Matching Quad 25 BDES Value")
    field(PINI, "YES")
    field(EGU, "kG")
    field(PREC, "4")
    field(DTYP, "asynFloat64")
	field(OMSL, "closed_loop") 
    field(DOL, "QUAD:LTUS:860:BDES_TEST CPP")  # TODO: Temporarily set as test
    field(OUT, "@asyn(GUARDIAN, 64, 0)STORED") 
    # info(autosaveFields, "VAL PREC DESC EGU HOPR LOPR SEVR HIHI HIGH LOW LOLO HHSV HSV LSV LLSV")
}

# ex: FBCK:FB02:GN01:S1DES_STORED_RBV
record(ai, "QUAD:LTUS:860:BDES_STORED_RBV") {
    field(DESC, "CQ or Matching Quad 25 BDES Value")    
    field(EGU, "kG")
    field(PREC, "4")
    field(DTYP, "asynFloat64")
    field(SCAN, "I/O Intr")
    field(INP, "@asyn(GUARDIAN, 64, 0)STORED")
    # info(autosaveFields, "VAL PREC DESC EGU HOPR LOPR SEVR HIHI HIGH LOW LOLO HHSV HSV LSV LLSV")
}

# ex: FBCK:FB02:GN01:S1DES_SNAPSHOT
record(ai, "QUAD:LTUS:860:BDES_SNAPSHOT") {
    field(DESC, "CQ or Matching Quad 25 BDES Value")
    field(SCAN, "I/O Intr")
    field(EGU, "kG")
    field(PREC, "4")
    field(DTYP, "asynFloat64")
    field(INP, "@asyn(GUARDIAN, 64, 0)SNAPSHOT")
    # info(autosaveFields, "VAL PREC DESC EGU HOPR LOPR SEVR HIHI HIGH LOW LOLO HHSV HSV LSV LLSV")
}
#=================================================================#
# Template file: guardian_device_data.template
# Database for device data values within sxrss for the guardian
# And for snapshot data values
# Uses guardian_device_data.substitutions
# Macro description:                                                   #
#   - NAME       : Name                                                #
#   - DESC       : Description                                         #
#   - ID         : ASYN ID                                             #
#=====================================================================


# ex: FBCK:FB02:GN01:S1DES_STORED
# This records purpose is to copy data from device data pvs, and push to ASYN PV
record(ao, "QUAD:LTUS:880:BDES_STORED") { 
    field(DESC, "CQ or Matching Quad 26 BDES Value")
    field(PINI, "YES")
    field(EGU, "kG")
    field(PREC, "4")
    field(DTYP, "asynFloat64")
	field(OMSL, "closed_loop") 
    field(DOL, "QUAD:LTUS:880:BDES_TEST CPP")  # TODO: Temporarily set as test
    field(OUT, "@asyn(GUARDIAN, 65, 0)STORED") 
    # info(autosaveFields, "VAL PREC DESC EGU HOPR LOPR SEVR HIHI HIGH LOW LOLO HHSV HSV LSV LLSV")
}

# ex: FBCK:FB02:GN01:S1DES_STORED_RBV
record(ai, "QUAD:LTUS:880:BDES_STORED_RBV") {
    field(DESC, "CQ or Matching Quad 26 BDES Value")    
    field(EGU, "kG")
    field(PREC, "4")
    field(DTYP, "asynFloat64")
    field(SCAN, "I/O Intr")
    field(INP, "@asyn(GUARDIAN, 65, 0)STORED")
    # info(autosaveFields, "VAL PREC DESC EGU HOPR LOPR SEVR HIHI HIGH LOW LOLO HHSV HSV LSV LLSV")
}

# ex: FBCK:FB02:GN01:S1DES_SNAPSHOT
record(ai, "QUAD:LTUS:880:BDES_SNAPSHOT") {
    field(DESC, "CQ or Matching Quad 26 BDES Value")
    field(SCAN, "I/O Intr")
    field(EGU, "kG")
    field(PREC, "4")
    field(DTYP, "asynFloat64")
    field(INP, "@asyn(GUARDIAN, 65, 0)SNAPSHOT")
    # info(autosaveFields, "VAL PREC DESC EGU HOPR LOPR SEVR HIHI HIGH LOW LOLO HHSV HSV LSV LLSV")
}
#=================================================================#
# Template file: guardian_device_data.template
# Database for device data values within sxrss for the guardian
# And for snapshot data values
# Uses guardian_device_data.substitutions
# Macro description:                                                   #
#   - NAME       : Name                                                #
#   - DESC       : Description                                         #
#   - ID         : ASYN ID                                             #
#=====================================================================


# ex: FBCK:FB02:GN01:S1DES_STORED
# This records purpose is to copy data from device data pvs, and push to ASYN PV
record(ao, "FBCK:FB04:TR02:S1DES_STORED") { 
    field(DESC, "UND Launch Setpoint S1 DES value")
    field(PINI, "YES")
    field(EGU, "mm/mr")
    field(PREC, "4")
    field(DTYP, "asynFloat64")
	field(OMSL, "closed_loop") 
    field(DOL, "FBCK:FB04:TR02:S1DES_TEST CPP")  # TODO: Temporarily set as test
    field(OUT, "@asyn(GUARDIAN, 66, 0)STORED") 
    # info(autosaveFields, "VAL PREC DESC EGU HOPR LOPR SEVR HIHI HIGH LOW LOLO HHSV HSV LSV LLSV")
}

# ex: FBCK:FB02:GN01:S1DES_STORED_RBV
record(ai, "FBCK:FB04:TR02:S1DES_STORED_RBV") {
    field(DESC, "UND Launch Setpoint S1 DES value")    
    field(EGU, "mm/mr")
    field(PREC, "4")
    field(DTYP, "asynFloat64")
    field(SCAN, "I/O Intr")
    field(INP, "@asyn(GUARDIAN, 66, 0)STORED")
    # info(autosaveFields, "VAL PREC DESC EGU HOPR LOPR SEVR HIHI HIGH LOW LOLO HHSV HSV LSV LLSV")
}

# ex: FBCK:FB02:GN01:S1DES_SNAPSHOT
record(ai, "FBCK:FB04:TR02:S1DES_SNAPSHOT") {
    field(DESC, "UND Launch Setpoint S1 DES value")
    field(SCAN, "I/O Intr")
    field(EGU, "mm/mr")
    field(PREC, "4")
    field(DTYP, "asynFloat64")
    field(INP, "@asyn(GUARDIAN, 66, 0)SNAPSHOT")
    # info(autosaveFields, "VAL PREC DESC EGU HOPR LOPR SEVR HIHI HIGH LOW LOLO HHSV HSV LSV LLSV")
}
#=================================================================#
# Template file: guardian_device_data.template
# Database for device data values within sxrss for the guardian
# And for snapshot data values
# Uses guardian_device_data.substitutions
# Macro description:                                                   #
#   - NAME       : Name                                                #
#   - DESC       : Description                                         #
#   - ID         : ASYN ID                                             #
#=====================================================================


# ex: FBCK:FB02:GN01:S1DES_STORED
# This records purpose is to copy data from device data pvs, and push to ASYN PV
record(ao, "FBCK:FB04:TR02:S2DES_STORED") { 
    field(DESC, "UND Launch Setpoint S2 DES value")
    field(PINI, "YES")
    field(EGU, "mm/mr")
    field(PREC, "4")
    field(DTYP, "asynFloat64")
	field(OMSL, "closed_loop") 
    field(DOL, "FBCK:FB04:TR02:S2DES_TEST CPP")  # TODO: Temporarily set as test
    field(OUT, "@asyn(GUARDIAN, 67, 0)STORED") 
    # info(autosaveFields, "VAL PREC DESC EGU HOPR LOPR SEVR HIHI HIGH LOW LOLO HHSV HSV LSV LLSV")
}

# ex: FBCK:FB02:GN01:S1DES_STORED_RBV
record(ai, "FBCK:FB04:TR02:S2DES_STORED_RBV") {
    field(DESC, "UND Launch Setpoint S2 DES value")    
    field(EGU, "mm/mr")
    field(PREC, "4")
    field(DTYP, "asynFloat64")
    field(SCAN, "I/O Intr")
    field(INP, "@asyn(GUARDIAN, 67, 0)STORED")
    # info(autosaveFields, "VAL PREC DESC EGU HOPR LOPR SEVR HIHI HIGH LOW LOLO HHSV HSV LSV LLSV")
}

# ex: FBCK:FB02:GN01:S1DES_SNAPSHOT
record(ai, "FBCK:FB04:TR02:S2DES_SNAPSHOT") {
    field(DESC, "UND Launch Setpoint S2 DES value")
    field(SCAN, "I/O Intr")
    field(EGU, "mm/mr")
    field(PREC, "4")
    field(DTYP, "asynFloat64")
    field(INP, "@asyn(GUARDIAN, 67, 0)SNAPSHOT")
    # info(autosaveFields, "VAL PREC DESC EGU HOPR LOPR SEVR HIHI HIGH LOW LOLO HHSV HSV LSV LLSV")
}
#=================================================================#
# Template file: guardian_device_data.template
# Database for device data values within sxrss for the guardian
# And for snapshot data values
# Uses guardian_device_data.substitutions
# Macro description:                                                   #
#   - NAME       : Name                                                #
#   - DESC       : Description                                         #
#   - ID         : ASYN ID                                             #
#=====================================================================


# ex: FBCK:FB02:GN01:S1DES_STORED
# This records purpose is to copy data from device data pvs, and push to ASYN PV
record(ao, "FBCK:FB04:TR02:S3DES_STORED") { 
    field(DESC, "UND Launch Setpoint S3 DES value")
    field(PINI, "YES")
    field(EGU, "mm/mr")
    field(PREC, "4")
    field(DTYP, "asynFloat64")
	field(OMSL, "closed_loop") 
    field(DOL, "FBCK:FB04:TR02:S3DES_TEST CPP")  # TODO: Temporarily set as test
    field(OUT, "@asyn(GUARDIAN, 68, 0)STORED") 
    # info(autosaveFields, "VAL PREC DESC EGU HOPR LOPR SEVR HIHI HIGH LOW LOLO HHSV HSV LSV LLSV")
}

# ex: FBCK:FB02:GN01:S1DES_STORED_RBV
record(ai, "FBCK:FB04:TR02:S3DES_STORED_RBV") {
    field(DESC, "UND Launch Setpoint S3 DES value")    
    field(EGU, "mm/mr")
    field(PREC, "4")
    field(DTYP, "asynFloat64")
    field(SCAN, "I/O Intr")
    field(INP, "@asyn(GUARDIAN, 68, 0)STORED")
    # info(autosaveFields, "VAL PREC DESC EGU HOPR LOPR SEVR HIHI HIGH LOW LOLO HHSV HSV LSV LLSV")
}

# ex: FBCK:FB02:GN01:S1DES_SNAPSHOT
record(ai, "FBCK:FB04:TR02:S3DES_SNAPSHOT") {
    field(DESC, "UND Launch Setpoint S3 DES value")
    field(SCAN, "I/O Intr")
    field(EGU, "mm/mr")
    field(PREC, "4")
    field(DTYP, "asynFloat64")
    field(INP, "@asyn(GUARDIAN, 68, 0)SNAPSHOT")
    # info(autosaveFields, "VAL PREC DESC EGU HOPR LOPR SEVR HIHI HIGH LOW LOLO HHSV HSV LSV LLSV")
}
#=================================================================#
# Template file: guardian_device_data.template
# Database for device data values within sxrss for the guardian
# And for snapshot data values
# Uses guardian_device_data.substitutions
# Macro description:                                                   #
#   - NAME       : Name                                                #
#   - DESC       : Description                                         #
#   - ID         : ASYN ID                                             #
#=====================================================================


# ex: FBCK:FB02:GN01:S1DES_STORED
# This records purpose is to copy data from device data pvs, and push to ASYN PV
record(ao, "FBCK:FB04:TR02:S4DES_STORED") { 
    field(DESC, "UND Launch Setpoint S4 DES value")
    field(PINI, "YES")
    field(EGU, "mm/mr")
    field(PREC, "4")
    field(DTYP, "asynFloat64")
	field(OMSL, "closed_loop") 
    field(DOL, "FBCK:FB04:TR02:S4DES_TEST CPP")  # TODO: Temporarily set as test
    field(OUT, "@asyn(GUARDIAN, 69, 0)STORED") 
    # info(autosaveFields, "VAL PREC DESC EGU HOPR LOPR SEVR HIHI HIGH LOW LOLO HHSV HSV LSV LLSV")
}

# ex: FBCK:FB02:GN01:S1DES_STORED_RBV
record(ai, "FBCK:FB04:TR02:S4DES_STORED_RBV") {
    field(DESC, "UND Launch Setpoint S4 DES value")    
    field(EGU, "mm/mr")
    field(PREC, "4")
    field(DTYP, "asynFloat64")
    field(SCAN, "I/O Intr")
    field(INP, "@asyn(GUARDIAN, 69, 0)STORED")
    # info(autosaveFields, "VAL PREC DESC EGU HOPR LOPR SEVR HIHI HIGH LOW LOLO HHSV HSV LSV LLSV")
}

# ex: FBCK:FB02:GN01:S1DES_SNAPSHOT
record(ai, "FBCK:FB04:TR02:S4DES_SNAPSHOT") {
    field(DESC, "UND Launch Setpoint S4 DES value")
    field(SCAN, "I/O Intr")
    field(EGU, "mm/mr")
    field(PREC, "4")
    field(DTYP, "asynFloat64")
    field(INP, "@asyn(GUARDIAN, 69, 0)SNAPSHOT")
    # info(autosaveFields, "VAL PREC DESC EGU HOPR LOPR SEVR HIHI HIGH LOW LOLO HHSV HSV LSV LLSV")
}
